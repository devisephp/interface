(function(){"use strict";var e={4267:function(e,t,s){s.r(t);var i=s(9669),n=s.n(i);t["default"]=()=>{window.axios=n(),window.axios.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",window.axios.defaults.headers.xsrfHeaderName="X-XSRF-TOKEN2",window.axios.defaults.headers.xsrfCookieName="XSRF-TOKEN2";const e=document.head.querySelector('meta[name="csrf-token"]');e&&(window.axios.defaults.headers.common["X-CSRF-TOKEN"]=e.content)}},3204:function(e,t,s){var i=s(538),n=s(3678),o=(s(1703),s(2433)),r=s(629),a=s(4009),d=s.n(a),c=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",[s("portal-target",{attrs:{name:"app-root"}}),s("div",{staticClass:"relative z-10",class:[e.breakpoint,e.isPreviewFrame?"preview-frame":""],attrs:{id:"devise-container"}},[s("div",{attrs:{id:"dvs-app-content"}},["undefined"===typeof e.currentPage||"desktop"===e.currentPage.previewMode||e.isPreviewFrame?s("div",{staticClass:"devise-content"},[e._t("on-top"),e._t("static-content"),"undefined"!==typeof e.currentPage&&e.currentPage.slices?[e.timeToShow?s("slices",{attrs:{slices:e.currentPage.slices,"editor-mode":e.can("access admin")&&!e.isPreviewFrame}}):e._e()]:e._e(),e.isLoggedIn&&"undefined"!==typeof e.currentPage&&e.currentPage.slices&&e.currentPage.slices.length<1?s("div",{staticClass:"dvs-text-center dvs-py-16 dvs-w-full dvs-flex dvs-flex-col dvs-py-20"},[s("h1",{staticClass:"dvs-font-sans dvs-font-thin dvs-text-gray-900 dvs-uppercase dvs-mb-4"},[e._v(" Let's Get to Work ")]),s("p",{staticClass:"dvs-text-xl dvs-text-gray-800"},[e._v(' Click "Add Slice" on the admin panel to start designing this page! ')])]):e._e(),e._t("\n          static-content-bottom"),e._t("on-bottom")],2):e._e(),"undefined"!==typeof e.currentPage&&!e.isPreviewFrame&&e.isLoggedIn?s("div",{attrs:{id:"devise-iframe-editor"}},["desktop"!==e.currentPage.previewMode&&e.isLoggedIn?s("iframe",{class:[e.currentPage.previewMode],attrs:{id:"devise-responsive-preview",src:e.currentUrl}}):e._e()]):e._e()])]),e.can("access admin")&&!e.isPreviewFrame?s("administration",{staticStyle:{position:"relative","z-index":"9999"}}):e._e(),s("messages",{staticStyle:{position:"relative","z-index":"9999"}})],1)},l=[],u={name:"Devise",components:{Administration:()=>Promise.all([s.e(90),s.e(737)]).then(s.bind(s,9287))},data(){return{timeToShow:!1}},computed:{...(0,r.Se)("devise",["breakpoint","currentUser","currentPage"]),currentUrl(){return window.location.href},isPreviewFrame(){try{return window.self!==window.top}catch(e){return!0}},isLoggedIn(){return this.currentUser}},created(){this.setSizeAndBreakpoint()},mounted(){window.devise=this,this.can("access admin")?this.initDevise():this.$nextTick((()=>{setTimeout((()=>{window.deviseSettings.$bus.$emit("devise-loaded")}),10)})),this.$nextTick((()=>{this.timeToShow=!0})),this.addWatchers()},methods:{...(0,r.nv)("devise",["setBreakpoint"]),initDevise(){try{this.isPreviewFrame?this.page=window.parent.deviseSettings.$page:(this.currentPage.previewMode="desktop",this.page=window.deviseSettings.$page,this.$router.push({name:"devise-page-editor"}))}catch(t){console.warn("Devise: window.deviseSettings.$page or window.parent.deviseSettings.$page not found. Nothing to render")}this.addWatchers();const e=this;this.$nextTick((()=>{setTimeout((()=>{e.removeBlocker(),e.showMessages(),window.deviseSettings.$bus.$emit("devise-loaded")}),10)}))},removeBlocker(){const e=document.getElementById("devise-blocker");e&&e.classList.add("fade")},showMessages(){const{errors:e}=window.deviseSettings.$messages;if(e){const t=Object.keys(e);for(const s of t)e[s].forEach((e=>{window.deviseSettings.$bus.$emit("showError",`${s}: ${e}`)}))}},addWatchers(){window.addEventListener("resize",this.setSizeAndBreakpoint)},setSizeAndBreakpoint(){const e=window.innerWidth,t=window.innerHeight,s=this.findBreakpoint(e);this.setBreakpoint({breakpoint:s,diminsions:{width:e,height:t}})},findBreakpoint(e){for(const t in this.deviseOptions.breakpoints)if(this.deviseOptions.breakpoints[t]&&e<this.deviseOptions.breakpoints[t])return t;return"ultraWideDesktop"}}},m=u,g=s(1001),p=(0,g.Z)(m,c,l,!1,null,null,null),h=p.exports,w={setBreakpoint(e,t){e.breakpoint=t},setDevMode(e,t){e.devMode=t},setGeneric(e,t){e[t.config.store]=t.response.data},deleteGeneric(e,t){e[t.config.store].data.splice(e.cobrands.data.indexOf(t.record),1)},setLanguages(e,t){e.languages=t},createLanguage(e,t){e.languages.data.push(t)},updateLanguage(e,{language:t,data:s}){s},setLayouts(e,t){e.layouts=t},addToMediaRegenerationRequests(e,t){e.mediaRegenerationRequests.push(t)},setCurrentDirectory(e,t){e.currentDirectory=t},setFiles(e,t){e.files=t},setSearchableMedia(e,t){e.searchableMedia.data=t},setDirectories(e,t){e.directories=t},toggleCropping(e){e.isCropping=!e.isCropping},setMeta(e,t){e.meta=t},createMeta(e,t){e.meta.data.push(t)},updateMeta(e,{meta:t,data:s}){s},deleteMeta(e,t){e.meta.data.splice(e.meta.data.indexOf(t),1)},setModels(e,t){e.models=t},setModelQueries(e,t){e.modelQueries=t},setModelSettings(e,t){e.modelSettings=t},setMothership(e,t){e.mothership=t},setCurrentPage(e,t){e.currentPage=Object.assign({},e.currentPage,t)},setCurrentPageVersionLastUpdate(e,t){e.currentPage.slices=t.slices,e.currentPage.version_last_updated_at=t.version_last_updated_at},setPreviewModeInCurrentPage(e,t){e.currentPage.previewMode=t},createPage(e,t){e.pages.data.push(t)},setPages(e,t){e.pages=t},setPagesList(e,t){e.pagesList.data=t},appendPage(e,t){e.pages.data.push(t)},updatePage(e,{page:t,data:s}){s},deletePage(e,t){e.pages.data.splice(e.pages.data.indexOf(t),1)},createPageVersion(e,{page:t,data:s}){t.versions.push(s)},deletePageVersion(e,{page:t,version:s}){const i=t.versions.find((e=>e.id===s.id));t.versions.splice(t.versions.indexOf(i),1)},updatePageVersion(e,{page:t,version:s,data:i}){let n=t.versions.find((e=>e.id===s.id));return n=i,n},createSite(e,t){e.sites.data.push(t)},setSites(e,t){e.sites=t},updateSite(e,{site:t,data:s}){t.name=s.name,t.domain=s.domain,t.languages=s.languages},deleteSite(e,t){e.sites.data.splice(e.sites.data.indexOf(t),1)},setSlices(e,t){e.slices=t},setSlicesDirectories(e,t){e.slicesDirectories=t},createSlice(e,t){e.slices.data.push(t)},updateSlice(e,{slice:t,data:s}){t.name=s.name},deleteSlice(e,t){e.slices.data.splice(e.slices.data.indexOf(t),1)},createRedirect(e,t){e.redirects.data.push(t)},setRedirects(e,t){e.redirects=t},updateRedirect(e,{redirect:t,data:s}){s},deleteRedirect(e,t){e.redirects.data.splice(e.redirects.data.indexOf(t),1)},createUser(e,t){e.users.data.push(t)},setUsers(e,t){e.users=t},updateUser(e,{user:t,data:s}){s},deleteUser(e,t){e.users.data.splice(e.users.data.indexOf(t),1)}};const v={buildFilterParams(e){if("undefined"===typeof e)return"";const t=JSON.parse(JSON.stringify(e));Object.keys(t).forEach((e=>{null===t[e]&&delete t[e]}));let s={};const n=v.buildSortParams(t.sort),o=v.buildRelatedParams(t.related),r=v.buildScopeParams(t.scopes),a=t.search,d=t.page,{paginated:c,cache:l}=t;if("undefined"!==typeof c&&(s.paginated=c,delete t.paginated),d&&""!==d&&(s.page=d),n&&""!==n&&(s.sort=n),r&&""!==r&&(s.scopes=r),l&&(s.cache=!0,delete t.cache),t.dates&&Object.keys(t.dates).length>0){const e={};for(const s in t.dates)(t.dates[s].after||t.dates[s].before)&&(e[s]=`${t.dates[s].after},${t.dates[s].before}`);s.filters||i["default"].set(s,"filters",{}),i["default"].set(s.filters,"dates",e)}if(o&&Object.keys(o).length>0){for(const e in o)o[e]&&""===o[e]&&i["default"]["delete"](o,e);s.filters||i["default"].set(s,"filters",{}),i["default"].set(s.filters,"related",o)}if(a&&Object.keys(a).length>0){for(const e in a)a[e]&&""===a[e]&&i["default"]["delete"](a,e);s.filters||i["default"].set(s,"filters",{}),i["default"].set(s.filters,"search",a)}return s=Object.assign({},t,s),s=v.serialize(s),s},buildSortParams(e){let t="";for(const s in e)e[s]&&(t+="desc"===e[s]?`-${s}`:s,t+=",");return t=t.substr(0,t.length-1),t},buildRelatedParams(e){const t={};for(const s in e)e[s]&&(t[s]=e[s].join());return t},buildSearchParams(e){const t={};for(const s in e)e[s]&&(t[s]=e[s].join());return t},buildScopeParams(e){const t=[];for(const s in e)if(e[s]){const i={};i[s]=e[s],t.push(i)}return t},serialize(e,t){const s=[];let i;for(i in e)if("undefined"!==typeof e[i]){const n=t?`${t}[${i}]`:i,o=e[i];s.push(null!==o&&"object"===typeof o?v.serialize(o,n):`${encodeURIComponent(n)}=${encodeURIComponent(o)}`)}return s.join("&")},formatMoney(e){let t=0;const s=2,i=".",n=",",o=e<0?"-":"",r=String(parseInt(e=Math.abs(Number(e)||0).toFixed(s),0));return t=(t=r.length)>3?t%3:0,`$${o+(t?r.substr(0,t)+n:"")+r.substr(t).replace(/(\d{3})(?=\d)/g,`$1${n}`)+(s?i+Math.abs(e-r).toFixed(s).slice(2):"")}`},sanitizeField(e){return"link"===e.type&&delete e.href,e},sanitizeSlice(e){for(const t in e)e[t]&&Object.prototype.hasOwnProperty.call(e[t],"type")&&"metadata"!==t&&(e[t]=this.sanitizeField(e[t]));e.slices.map((e=>this.sanitizeSlice(e)))},sanitizePageData(e){return e.slices.map((e=>this.sanitizeSlice(e)))}};var f=v;const b={getGeneric(e,t){let s=!1,i=`${e.state.api.baseUrl}${t.config.apiendpoint}/?${f.buildFilterParams(t.filters)}`;return t.config.app&&(s=!0,i=`${t.config.apiendpoint}/?${f.buildFilterParams(t.filters)}`),new Promise((n=>{window.axios.get(i).then((i=>{e.commit("setGeneric",{config:t.config,response:i},{root:s}),n(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getGenericRecord(e,t){let s=`${e.state.api.baseUrl}${t.config.apiendpoint}/${t.id}`;return t.config.app&&(s=`${t.config.apiendpoint}/${t.id}`),new Promise((e=>{window.axios.get(s).then((t=>{e(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},searchGeneric(e,t){let s=`${e.state.api.baseUrl}${t.config.apiendpoint}/?${f.buildFilterParams(t.filters)}`;return t.config.app&&(s=`${t.config.apiendpoint}/?${f.buildFilterParams(t.filters)}`),new Promise((e=>{window.axios.get(s).then((t=>{e(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},createGeneric(e,t){let s="";return s=t.config.app?t.config.apiendpoint:`${e.state.api.baseUrl}${t.config.apiendpoint}`,new Promise((e=>{window.axios.post(s,t.record).then((s=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.record[t.config.recordLabel]} has been created.`}),e(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},updateGeneric(e,t){let s=`${e.state.api.baseUrl}${t.config.apiendpoint}/${t.record.id}`;return t.config.app&&(s=`${t.config.apiendpoint}/${t.record.id}`),new Promise((e=>{window.axios.put(s,t.record).then((s=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.record[t.config.recordLabel]} has been saved.`}),e(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},deleteGeneric(e,t){let s=`${e.state.api.baseUrl}${t.config.apiendpoint}/${t.record.id}`;return t.config.app&&(s=`${t.config.apiendpoint}/${t.record.id}`),new Promise((e=>{window.axios.delete(s).then((s=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.record[t.config.recordLabel]} has been deleted.`}),e(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},appGenericSearch(e,t){return new Promise((e=>{window.axios.get(`${t.config.apiendpoint}/?${f.buildFilterParams(t.filters)}`).then((t=>{e(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},setBreakpoint(e,t){return new Promise((s=>{e.commit("setBreakpoint",t),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},saveCaption(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}media/alts`,t).then((e=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your caption has been saved."}),s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},setDevMode(e,t){return new Promise((s=>{e.commit("setDevMode",t),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getLanguages(e){return new Promise(((t,s)=>{window.axios.get(`${e.state.api.baseUrl}languages/`).then((s=>{e.commit("setLanguages",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e),s(e)}))}))},createLanguage(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}languages/`,t).then((t=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new language has been added."}),e.commit("createLanguage",t.data.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},updateLanguage(e,t){return new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}languages/${t.id}`,t).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new language has been updated."}),e.commit("updateLanguage",{language:t,data:i.data}),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},setCurrentDirectory(e,t){return new Promise((s=>{e.commit("setCurrentDirectory",t),s()})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},generateImages(e,t){return new Promise(((s,i)=>{window.axios.put(`${e.state.api.baseUrl}media-styles`,t).then((t=>{e.commit("setFiles",t.data),s(t)}),(e=>{window.deviseSettings.$bus.$emit("showError",e),i(e)}))}))},regenerateMedia(e,t){return e.commit("addToMediaRegenerationRequests",t),new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}media-styles/${t.instanceId}/${t.fieldName}`,t).then((t=>{e.commit("setFiles",t.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},mediaSearch(e,t){return new Promise((s=>{window.axios.get(`${e.state.api.baseUrl}media-search?q=${t}`).then((e=>{s(e.data)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getCurrentFiles(e,t){let s="";return t&&"image"===t.type&&(s="?type=image"),new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}media/${e.state.currentDirectory}${s}`).then((s=>{e.commit("setFiles",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getCurrentDirectories(e){return new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}media-directories/${e.state.currentDirectory}`).then((s=>{e.commit("setDirectories",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},toggleFile(e,t){const s=e.state.files.find((e=>e.name===t.name)),i="undefined"===typeof s.on||!1===s.on;e.commit("toggleFileOnOff",{file:s,on:i})},deleteFile(e,t){return new Promise((s=>{window.axios.delete(`${e.state.api.baseUrl}media${t.url}`).then((e=>{window.deviseSettings.$bus.$emit("showMessage",{title:"File Deleted",message:"The file was successfully deleted from the server."}),s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},createDirectory(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}media-directories`,{directory:t.directory,name:t.name}).then((e=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Directory Created",message:"The directory was successfully created."}),s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},deleteDirectory(e,t){return new Promise((s=>{window.axios.delete(`${e.state.api.baseUrl}media-directories`,{params:{directory:t}}).then((e=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Directory Deleted",message:"The directory was successfully deleted from the server."}),s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getMeta(e){return new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}meta/`).then((s=>{e.commit("setMeta",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},createMeta(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}meta/`,t).then((t=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new meta has been added."}),e.commit("createMeta",t.data.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},updateMeta(e,t){return new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}meta/${t.id}`,t).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new meta has been updated."}),e.commit("updateMeta",{meta:t,data:i.data}),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},deleteMeta(e,t){return new Promise((s=>{window.axios.delete(`${e.state.api.baseUrl}meta/${t.id}`).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"The meta has been deleted."}),e.commit("deleteMeta",t),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getModels(e){return new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}models/`).then((s=>{e.commit("setModels",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getModelQueries(e){return new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}model-queries/`).then((s=>{e.commit("setModelQueries",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getModelSettings(e,t){return new Promise((s=>{window.axios.get(`${e.state.api.baseUrl}models/settings?${t}`).then((t=>{e.commit("setModelSettings",t.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getModelRecords(e,{model:t,filters:s}){return new Promise((i=>{window.axios.get(`${e.state.api.baseUrl}models/query?class=${t}&${f.buildFilterParams(s)}`).then((e=>{i(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getPages(e,t){return new Promise((s=>{window.axios.get(`${e.state.api.baseUrl}pages/?${f.buildFilterParams(t)}`).then((t=>{e.commit("setPages",t.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getPagesList(e,t){return new Promise((s=>{const i=t&&Object.prototype.hasOwnProperty.call(t,"language_id")?`language_id=${t.language_id}`:{};window.axios.get(`${e.state.api.baseUrl}routes?${i}`).then((t=>{e.commit("setPagesList",t.data.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},getPage(e,t){return new Promise((s=>{window.axios.get(`${e.state.api.baseUrl}pages/${t}`).then((t=>{e.commit("appendPage",t.data),s(t)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},searchPages(e,t){return new Promise((s=>{window.axios.get(`${e.state.api.baseUrl}pages-suggest/`,{params:{term:t.term}}).then((e=>{s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},searchPageVersions(e,t){return new Promise((s=>{window.axios.get(`${e.state.api.baseUrl}page-versions/`,{params:{term:t.term,site_id:t.site_id}}).then((e=>{s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},copyPage(e,t){return new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}pages/${t.page.id}/copy`,t.data).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.data.title} has been copied from ${t.page.title}.`}),e.commit("createPage",i.data),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},translatePage(e,t){return new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}pages/${t.page.id}/copy`,t.data).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.data.title} has been copied for translation from ${t.page.title}.`}),e.commit("createPage",i.data),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},copyPageVersion(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}page-versions`,{page_version_id:t.version.id,name:`${t.version.name} Copy`}).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.version.name} has been copied.`}),e.commit("createPageVersion",{page:t.page,data:i.data.data}),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},deletePageVersion(e,t){return new Promise((s=>{window.axios.delete(`${e.state.api.baseUrl}page-versions/${t.version.id}`).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.version.name} has been deleted.`}),e.commit("deletePageVersion",{page:t.page,version:t.version}),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},updatePageVersion(e,t){return new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}page-versions/${t.version.id}`,t.version).then((i=>{e.commit("updatePageVersion",{page:t.page,version:t.version,data:i.data}),window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.version.name} has been saved.`}),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},savePage(e,t){const{page:s}=t,{forceSave:i}=t,n=s.versions.find((e=>!0===e.current));let o=`${e.state.api.baseUrl}pages/${s.id}?version_id=${n.id}`;return i&&(o=`${e.state.api.baseUrl}pages/${s.id}?version_id=${n.id}&force=1`),new Promise(((t,i)=>{window.axios.put(o,s).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${s.title} has been saved.`}),window.deviseSettings.$bus.$emit("devise-page-saved"),e.commit("setCurrentPageVersionLastUpdate",i.data.data),t(i)})).catch((e=>{480===e.response.status?t(480):(window.deviseSettings.$bus.$emit("showError",e),i(e))}))}))},setPreviewModeInCurrentPage(e,t){e.commit("setPreviewModeInCurrentPage",t)},getSlicesDirectories(e){return new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}slices-directories/`).then((s=>{e.commit("setSlicesDirectories",s.data),t(s)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},createSlice(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}slices/`,t).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.name} has been created.`}),e.commit("createSlice",i.data.data),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},updateSlice(e,t){return new Promise((s=>{window.axios.put(`${e.state.api.baseUrl}slices/${t.slice.id}`,t.data).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.data.name} has been saved.`}),e.commit("updateSlice",{slice:t.slice,data:i.data.data}),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},deleteSlice(e,t){return new Promise((s=>{window.axios.delete(`${e.state.api.baseUrl}slices/${t.id}`).then((i=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:`${t.name} has been deleted.`}),e.commit("deleteSlice",t),s(i)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},copyPageSlice(e,t){return new Promise((s=>{window.axios.post(`${e.state.api.baseUrl}page-versions/${t.page_version_id}/slices`,{copy_slice_id:t.copy_slice_id}).then((e=>{window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Slice was copied."}),s(e)})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))})).catch((e=>{window.deviseSettings.$bus.$emit("showError",e)}))},refreshChecklist(e){return new Promise((t=>{window.axios.get(`${e.state.api.baseUrl}install-checklist/`).then((s=>{e.commit("updateChecklist",s.data),t(s)})).catch((()=>{window.deviseSettings.$bus.$emit("showError","Error in retrieving checklist")}))})).catch((()=>{window.deviseSettings.$bus.$emit("showError","Error in retrieving checklist")}))},completeInstall(e){return new Promise((t=>{window.axios.post(`${e.state.api.baseUrl}install-complete/`).then((e=>{t(e)})).catch((()=>{window.deviseSettings.$bus.$emit("showError","Error in completing the install. You can add DVS_MODE=active to your .env to manually complete")}))})).catch((()=>{window.deviseSettings.$bus.$emit("showError","Error in completing the install.  You can add DVS_MODE=active to your .env to manually complete")}))},login(e,t){return new Promise((e=>{window.axios.post("/login",t).then((t=>{e(t)})).catch((()=>{window.deviseSettings.$bus.$emit("showError","Error logging the new user in. Check database to ensure user was inserted correctly.")}))})).catch((()=>{window.deviseSettings.$bus.$emit("showError","Error logging the new user in. Check database to ensure user was inserted correctly.")}))}};var $=b;const S=s(7621),y={breakpoint:e=>e.breakpoint.breakpoint,breakpointAndDimensions:e=>e.breakpoint,component:e=>e=>window.deviseSettings.$deviseComponents[e],componentFromView:e=>e=>{for(const t in window.deviseSettings.$deviseComponents)if(window.deviseSettings.$deviseComponents[t].view===`slices.${e}`)return window.deviseSettings.$deviseComponents[t];return!1},deviseInterface:()=>window.deviseSettings.$interface,sliceConfig:()=>e=>window.deviseSettings.$deviseComponents[e.metadata.name]?window.deviseSettings.$deviseComponents[e.metadata.name]:window.deviseSettings.$deviseComponents[e.name],fieldConfig:(e,t)=>({fieldKey:e,slice:s})=>{const i=t.sliceConfig(s);return"undefined"!==typeof i.config[e]&&i.config[e]},languages:e=>e.languages,lang:e=>window.deviseSettings.$lang,mediaAlreadyRequested:e=>t=>e.mediaRegenerationRequests.find((e=>e.component===t.component&&e.fieldName===t.fieldName)),files:e=>e.files,directories:e=>e.directories,searchableMedia:e=>e.searchableMedia,currentDirectory:e=>e.currentDirectory,meta:e=>e.meta,storeModels:e=>e.models,modelSettings:e=>e.modelSettings,mothershipUrl:e=>e.mothership?e.mothership.url:null,mothershipApiKey:e=>e.mothership?e.mothership["api-key"]:null,changes:e=>e.changes,pages:e=>e.pages,pagesList:e=>e.pagesList,page:(e,t,s)=>{const i=parseInt(s.route.params.pageId,0);return e.pages.data.find((e=>e.id===i))},currentPage:e=>e.currentPage,sites:e=>e.sites,site:e=>window.deviseSettings.$sites?window.deviseSettings.$sites.find((e=>e.current)):[],siteByRouteParam:(e,t,s)=>{const i=parseInt(s.route.params.siteId,0);return e.sites.data?e.sites.data.find((e=>e.id===i)):null},additionalSiteSettings:(e,t,s)=>{const i=parseInt(t.site.id,0),n=window.deviseSettings.$config.additionalSiteSettings;return n?n.find((e=>e.id===i)):null},siteById:e=>t=>!!e.sites.data&&e.sites.data.find((e=>e.id===t)),theme:(e,t,s)=>{const i={panel:{background:"radial-gradient(ellipse at top, #2C3858 , #182039)",color:"#cdc9f1",secondaryColor:"#979797"},panelCard:{background:"#12182d",color:"#eee"},panelSidebar:{background:"#182039",color:"#eee",secondaryColor:"rgb(101, 139, 239)",borderColor:S("#182039").lighten(10).toString()},panelIcons:{color:"#658BEF"},actionButton:{color:"#ffffff",background:"#EB8F89"},actionButtonGhost:{color:"#EB8F89",borderColor:"#EB8F89",borderWidth:"2px"},secondaryButton:{color:"#ffffff",background:"#EB8F89"},secondaryButtonGhost:{color:"#EB8F89",borderColor:"#EB8F89",borderWidth:"2px"},help:{color:"#EB8F89",borderColor:"#EB8F89",backgroundColor:"#ffe5e4"},chartColor1:{color:"rgba(54, 162, 235, 1)"},chartColor2:{color:"rgba(75, 192, 192, 1)"},chartColor3:{color:"rgba(255, 206, 86, 1)"},chartColor4:{color:"rgba(255, 99, 132, 1)"},chartColor5:{color:"rgba(153, 102, 255, 1)"},chartColor6:{color:"rgba(255, 159, 64, 1)"}};let n=i;if(e.currentPage){const s=t.siteById(e.currentPage.site_id);if(s&&s.settings&&s.settings.colors){const e=s.settings.colors;e.panelTop&&e.panelBottom&&(n.panel={background:`radial-gradient(ellipse at top, ${e.panelTop.color}, ${e.panelBottom.color})`,color:e.panelText.color,secondaryColor:"#979797"}),e.panelpanelSidebarBackgroundTop&&e.panelSidebarText&&(n.panelCard={background:e.panelSidebarBackground.color,color:e.panelSidebarText.color}),e.penalSidebarBackground&&e.panelSidebarText&&e.panelSidebarAction&&e.panelSidebarBackground&&(n.panelSidebar={background:e.panelSidebarBackground.color,color:e.panelSidebarText.color,secondaryColor:e.panelSidebarAction.color,borderColor:S(e.panelSidebarBackground.color).lighten(10).toString()}),e.panelAction&&(n.panelIcons={color:e.panelAction.color}),e.buttonsActionBackground&&e.buttonsActionText&&(n.actionButton={background:e.buttonsActionBackground.color,color:e.buttonsActionText.color}),e.buttonsActionBackground&&(n.actionButtonGhost={border:`2px solid ${e.buttonsActionBackground.color}`,color:e.buttonsActionBackground.color}),e.buttonsSecondaryBackground&&e.buttonsSecondaryText&&(n.secondaryButton={background:e.buttonsSecondaryBackground.color,color:e.buttonsSecondaryText.color}),e.buttonsSecondaryBackground&&(n.secondaryButtonGhost={border:`2px solid ${e.buttonsSecondaryBackground.color}`,color:e.buttonsSecondaryBackground.color}),e.helpBackground&&e.helpText&&(n.help={background:e.helpBackground.color,border:`1px solid ${e.helpBackground.color}`,color:e.helpText.color}),e.chartColor1&&e.chartColor2&&e.chartColor3&&e.chartColor4&&e.chartColor5&&e.chartColor6&&(n.chartColor1={color:e.chartColor1.color}),n.chartColor2={color:e.chartColor2.color},n.chartColor3={color:e.chartColor3.color},n.chartColor4={color:e.chartColor4.color},n.chartColor5={color:e.chartColor5.color},n.chartColor6={color:e.chartColor6.color}}}return n=Object.assign({},i,n),n},slicesList:e=>e.slices,slicesDirectories:e=>e.slicesDirectories,templates:e=>e.templates,template:(e,t,s)=>{const i=parseInt(s.route.params.templateId,0);return e.templates.data.find((e=>e.id===i))},redirects:e=>e.redirects,redirect:(e,t,s)=>{const i=parseInt(s.route.params.redirectId,0);return e.redirects.data.find((e=>e.id===i))},currentRedirect:e=>window.deviseSettings.$redirect,users:e=>e.users,user:(e,t,s)=>{const i=parseInt(s.route.params.userId,0);return e.users.data.find((e=>e.id===i))},currentUser:e=>window.deviseSettings.$user};var P=y;i["default"].use(r.ZP);const E={api:{baseUrl:"/api/devise/"},adminMenu:[{icon:"CreateIcon",routeName:"devise-page-editor"},{icon:"ImageIcon",label:"Settings",routeName:"media-manager",permissions:"manage media"},{icon:"CogIcon",label:"Settings",routeName:"devise-settings",permissions:"manage settings",menu:[{label:"Site Settings",children:[{label:"Pages",routeName:"devise-pages-admin",permissions:"manage pages"},{label:"Users",routeName:"devise-users-admin",permissions:"manage users"},{label:"Global Meta",routeName:"devise-meta-manage",permissions:"manage meta"},{label:"Sites",routeName:"devise-sites-admin",permissions:"manage sites"},{label:"Languages",routeName:"devise-languages-manage",permissions:"manage languages"},{label:"301 Redirects",routeName:"devise-redirects-admin",permissions:"manage redirects"}]}]}],breakpoint:{breakpoint:null,diminsions:{width:null,height:null}},devMode:!1,changes:[],currentDirectory:".",directories:[],files:[],searchableMedia:{data:[]},isCropping:!1,languages:{data:[]},layouts:[],mediaRegenerationRequests:[],meta:{data:[]},models:{data:[]},modelQueries:[],modelSettings:{},mothership:null,currentPage:{languages:[],slices:[],meta:[],versions:[],previewMode:"desktop"},pages:{data:[]},pagesList:{data:[]},site:{},sites:{data:[]},slices:[],slicesDirectories:[],templates:{data:[]},redirects:{data:[]},users:{data:[]},checklist:{database:!1,migrations:!1,auth:!1,user:!1,site:!1,page:!1,image_library:!1,optional:{config:!1},image_optimization:{jpegoptim:!1,optipng:!1,pngquant:!1,svgo:!1,gifsicle:!1}}};var k={namespaced:!0,state:E,mutations:w,actions:$,getters:P},x=new i["default"];const C=s(7621);function M(e,t){if(null!==t.value){const{background:s}=t.modifiers;if(s){const s=window.getComputedStyle(e).getPropertyValue("background-color");if(s){const i=C(s);i.setAlpha(t.value),e.style.backgroundColor=i}}}}var _={bind(e,t){const s=function s(){const n=document.querySelector("#devise-admin"),o=document.createElement("devise-confirm"),r=n.parentNode.insertBefore(o,n.nextSibling),a=i["default"].extend({data(){return{clicks:0,show:!0}},methods:{ok(){t.value.callback(t.value.arguments),this.close()},cancel(){this.close()},close(){this.show=!1,e.removeEventListener("click",s,!0),r.remove()}},template:`\n        <div v-if="show" class="dvs-fixed dvs-inset-0 dvs-z-9999">\n          <div class="dvs-blocker"></div>\n          <div class="dvs-fixed dvs-absolute-center dvs-z-50 dvs-p-8 dvs-rounded dvs-shadow-lg dvs-bg-admin-bg dvs-text-admin-fg">\n            <h3 class="dvs-mb-8 dvs-text-white">Please Confirm</h3>\n            <div class="dvs-mb-8 dvs-text-white">${t.value.message}</div>\n\n            <button class="dvs-btn dvs-btn-primary" @click="ok">Confirm</button>\n            <button class="dvs-btn dvs-btn-secondary" @click="cancel">Cancel</button>\n            </div>\n          </div>\n        </div>\n        `});(new a).$mount(r)};e.addEventListener("click",s)}};function O(e,t){if(null!==t.value){let{image:s,srcAttr:i,breakpoint:n}=t.value;const{lazy:o,background:r}=t.modifiers;let{noSize:a}=t.modifiers;n=null!==n?n:"desktop",i=i||"src","string"===typeof t.value&&(s={url:t.value});const d=()=>{const{sizes:e}=s;if(!e||!e[Object.keys(e)[0]])return!1;for(const s in e)if(e[s]){const t=e[s];if(t.breakpoints){const e=t.breakpoints.map((e=>e.toLowerCase()));if(e.includes(n.toLowerCase()))return{size:s,settings:t}}}const t=Object.keys(e)[0];return{defaultSize:t,settings:e[t]}},c=()=>{if("undefined"!==typeof s&&s.media){const t=d();if(t&&s.media[t.size])return e.width=t.settings.w,e.height=t.settings.h,!0}return!1},l=()=>{if("undefined"!==typeof s){let t=s.url,n=null;s.media?(n=d(),n?s.media[n.size]&&(t=s.media[n.size]):s.media.custom&&(t=s.media.custom)):a=!0,r?e.style.backgroundImage=`url('${t}')`:(e.setAttribute(i,t),s.alt?e.alt=s.alt:s.caption&&(e.alt=s.caption),!a&&null!==n&&n.settings&&(e.width=n.settings.w,e.height=n.settings.h))}};if(o&&"IntersectionObserver"in window){c();const t=new IntersectionObserver((s=>{s.forEach((s=>{s.isIntersecting&&(l(),t.unobserve(e))}))}));t.observe(e)}else c(),l()}}function D(e,t){const s=t.value;e.href=s.href,e.target=s.target,e.innerHTML=s.text}var U=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div")},F=[],B=s(5913),T={name:"DeviseMessages",mixins:[B.Z],data(){return{title:null}},computed:{mainTitle(){return null===this.title?"There was a Problem":this.title},activeErrors(){return this.errors.filter((e=>!0===e.active))},activeMessages(){return this.messages.filter((e=>!0===e.active))}},mounted(){const e=this;window.deviseSettings.$bus.$on("showError",(t=>{e.addError(t)})),window.deviseSettings.$bus.$on("showMessage",(t=>{e.addMessage(t)}))},methods:{addError(e){const t=this;if("undefined"!==typeof e.response&&"undefined"!==typeof e.response.data&&"undefined"!==typeof e.response.data.errors){this.title=e.response.data.message;for(const s in e.response.data.errors)if(e.response.data.errors[s]){const i=e.response.data.errors[s];t.appendError({id:this.genUniqueKey(e),code:e.response.status,title:e.response.statusText,message:i[0]})}}else if("undefined"!==typeof e.response&&"undefined"!==typeof e.response.data&&null!==e.response.data&&null!==e.response.data.message){const s=e.response.data.exception?e.response.data.exception:e.response.data.message;t.appendError({id:this.genUniqueKey(e),code:e.response.status,title:`${e.response.status}: ${s}`,message:e.response.data.message})}else"undefined"!==typeof e.data&&null!==e.data?t.appendError({id:this.genUniqueKey(e),code:e.status,title:e.data.error,message:e.data.message}):"string"===typeof e?t.appendError({id:this.genUniqueKey(e),code:"",title:"Uh-Oh!",message:e}):"undefined"!==typeof e.message&&null!==e.message?t.appendError({id:this.genUniqueKey(e),code:"",title:"Uh-Oh!",message:e.message}):t.appendError({id:this.genUniqueKey(e),code:e.code,title:`${e.code}: ${e.title}`,message:e.message})},appendError(e){const t=e.title?e.title:"Unknown Error",s=e.message?e.message:"We do not have any details on this error";let i=`${t}: ${s}`;this.$toast.open({message:i,type:"error",duration:5e3})},addMessage(e){let t=`${e.title}: ${e.message}`;this.$toast.open({message:t,type:"success",duration:5e3})}}},L=T,R=(0,g.Z)(L,U,F,!1,null,null,null),j=R.exports;const I=()=>s.e(91).then(s.bind(s,6858)),N=()=>Promise.all([s.e(90),s.e(737)]).then(s.bind(s,3788)),z=()=>s.e(208).then(s.bind(s,8987)),A=()=>s.e(90).then(s.bind(s,2908)),V=()=>s.e(351).then(s.bind(s,5177)),q=()=>s.e(648).then(s.bind(s,9659)),G=()=>s.e(351).then(s.bind(s,6892)),Z=()=>s.e(585).then(s.bind(s,8295)),W=[{path:"/devise-settings",name:"devise-settings",components:{devise:N},meta:{parentRouteName:"devise-settings"},permissions:"manage settings"},{path:"/devise-models",name:"devise-models",components:{devise:N},meta:{parentRouteName:"devise-models"}},{path:"/devise/pages/",name:"devise-pages-admin",components:{devise:V},meta:{parentRouteName:"devise-settings"}},{path:"/",alias:"*",name:"devise-page-editor",components:{devise:A},meta:{parentRouteName:"devise-page-editor"}},{path:"/devise/settings/languages",name:"devise-languages-manage",components:{devise:I},meta:{parentRouteName:"devise-settings"}},{path:"/devise/settings/meta",name:"devise-meta-manage",components:{devise:z},meta:{parentRouteName:"devise-settings"}},{path:"/devise/settings",name:"devise-settings-index",components:{devise:N},meta:{parentRouteName:"devise-settings"}},{path:"/devise/sites",name:"devise-sites-admin",components:{devise:q},meta:{parentRouteName:"devise-settings"}},{path:"/devise/users",name:"devise-users-admin",components:{devise:G},meta:{parentRouteName:"devise-settings"}},{path:"/devise/redirects",name:"devise-redirects-admin",components:{devise:Z},meta:{parentRouteName:"devise-settings"}}];var H=W,K=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s(e.currentView,e._g(e._b({ref:"component",tag:"component",class:[e.devise.metadata.name],style:e.styles,attrs:{id:e.id,devise:e.deviseForSlice,breakpoint:e.breakpoint,slices:e.devise.slices,"devise-models":e.currentPage,component:e.sliceComponent,"slice-index":e.sliceIndex}},"component",e.$attrs,!1),e.$listeners))},Y=[],J=s(4477),X=s.n(J),Q={name:"DeviseSlice",components:{Slice:se,SettingsIcon:()=>s.e(952).then(s.bind(s,7437))},mixins:[B.Z],props:{editorMode:{type:Boolean,default:!1},sliceIndex:{type:Number,required:!0}},data(){return{mounted:!1,showEditor:!1,sliceEl:null,sliceComponent:null}},computed:{...(0,r.Se)("devise",["component","sliceConfig","breakpoint","mediaAlreadyRequested"]),deviseForSlice(){return this.devise.config?this.devise.config:this.devise},id(){return"undefined"===typeof this.deviseForSlice.settings&&this.$set(this.deviseForSlice,"settings",{id:null}),this.deviseForSlice.settings.id},styles(){const e={};"undefined"===typeof this.deviseForSlice.settings&&this.$set(this.deviseForSlice,"settings",{});const{backgroundColor:t,color:s,margin:i,mobile_margin:n,tablet_margin:o,padding:r,mobile_padding:a,tablet_padding:d}=this.deviseForSlice.settings;return"undefined"!==typeof t&&(e.backgroundColor=t),"undefined"!==typeof s&&(e.color=s),"tablet"===this.breakpoint?this.buildStyles(e,o,d):"mobile"===this.breakpoint?this.buildStyles(e,n,a):this.buildStyles(e,i,r)},currentView(){return this.devise.config?window.deviseSettings.$deviseComponents[this.devise.name]:window.deviseSettings.$deviseComponents[this.devise.metadata.name]}},created(){this.cleanupImageFields(),this.hydrateMissingProperties(),this.checkDefaults(),this.sliceComponent=this.component(this.devise.metadata.name)},mounted(){this.mounted=!0,this.sliceEl=this.$refs.component.$el,"undefined"===typeof this.devise.settings&&this.$set(this.devise,"settings",{}),this.addListeners(),this.can("manage slices")&&this.checkMediaSizesForRegeneration()},methods:{...(0,r.nv)("devise",["regenerateMedia"]),addListeners(){window.deviseSettings.$bus.$on("jumpToSlice",this.attemptJumpToSlice),window.deviseSettings.$bus.$on("screenshotSlice",this.attemptScreenshotSlice),window.deviseSettings.$bus.$on("openSliceSettings",this.attemptOpenSliceSettings),window.deviseSettings.$bus.$on("markSlice",this.markSlice),this.addVisibilityScrollListeners()},hydrateMissingProperties(){const{fields:e}=this.sliceConfig(this.devise);if(e)for(const t in e)this.addMissingProperty(t),this.addFieldConfigurations(e,t)},addMissingProperty(e){const t={text:null,url:null,media:{},target:null,color:null,checked:null,enabled:!1},s=Object.assign({},t,this.deviseForSlice[e]);this.$set(this.deviseForSlice,e,s)},checkDefaults(){const{fields:e}=this.sliceConfig(this.devise);if(e)for(const t in e)this.deviseForSlice[t]&&e[t].default&&this.setDefaults(t,e[t].default)},addFieldConfigurations(e,t){for(const s in e[t])this.deviseForSlice[t]["pp"]||this.$set(this.deviseForSlice[t],s,e[t][s])},setDefaults(e,t){for(const s in t)"undefined"!==typeof this.deviseForSlice[e][s]&&null!==this.deviseForSlice[e][s]||this.$set(this.deviseForSlice[e],s,t[s])},cleanupImageFields(){if("undefined"!==typeof this.currentView.fields)for(const e in this.currentView.fields)if(this.currentView.fields[e]){const t=this.currentView.fields[e];this.devise[e]&&"image"===t.type&&null!==this.devise[e].url&&(delete this.devise[e].sizes,this.$set(this.devise[e],"sizes",t.sizes))}},checkMediaSizesForRegeneration(){if("undefined"!==typeof this.currentView.fields)for(const e in this.currentView.fields)if(this.currentView.fields[e]){const t=this.currentView.fields[e];"image"===t.type&&"media"===this.devise[e].mode&&null!==this.devise[e].url&&("undefined"===typeof t.sizes||"object"!==typeof this.devise[e].media||this.mediaAlreadyRequested({component:this.devise.metadata.name,fieldName:e})||this.determineMediaRegenerationNeeds(t,e))}},determineMediaRegenerationNeeds(e,t){for(const s in e.sizes)if(e.sizes[s]&&("undefined"===typeof this.devise[t].media[s]||!this.devise[t].media[s]))return this.makeMediaRegenerationRequest(e,t),!0;for(const i in e.sizes)if(e.sizes[i]){const n=e.sizes[i],o=this.devise[t].media[i];o&&s.e(519).then(s.t.bind(s,7563,19)).then((({default:s})=>{const i=o.indexOf("?"),r=o.substring(i),a=s.parse(r);if(!a||parseInt(a.w,0)!==parseInt(n.w,0)||parseInt(a.h,0)!==parseInt(n.h,0))return this.makeMediaRegenerationRequest(e,t),!0})).catch((()=>"An error occurred while loading the component"))}return!1},makeMediaRegenerationRequest(e,t){const s={allSizes:e.sizes,instanceId:this.devise.metadata.instance_id,fieldName:t,component:this.devise.metadata.name};this.regenerateMedia(s).then((()=>{window.deviseSettings.$bus.$emit("showMessage",{title:"New Images Generated",message:`Pro tip: Some new sizes were generated for a slice you were working on (Field: ${s.fieldName}) You may need to refresh.`})}))},attemptJumpToSlice(e){if(this.devise.metadata&&e.metadata&&this.devise.metadata.instance_id===e.metadata.instance_id)try{const e=X().offset(this.sliceEl,"margin");window.scrollTo({top:e.top,behavior:"smooth"})}catch(t){console.warn("Devise Warning: There may be a problem with this slice. Try wrapping the template in a single <div> to resolve and prevent children components to be at the root level.")}},attemptScreenshotSlice(e){if(this.devise.metadata&&e.metadata&&this.devise.metadata.instance_id===e.metadata.instance_id)try{const t=X().offset(this.sliceEl,"margin"),s=X().width(this.sliceEl,"margin"),i=X().height(this.sliceEl,"margin"),n=window.innerWidth,o=window.innerHeight;window.axios.get("/api/devise/slice-preview",{params:{file_name:e.metadata.name,width:s,height:i,window_width:n,window_height:o,offset_top:t.top,offset_left:t.left,url:window.location.href}}).then((()=>{window.deviseSettings.$bus.$emit("screenshotDone",e),window.deviseSettings.$bus.$emit("showMessage",{title:"Screenshot Generated",message:"Pro tip: A screenshot of this slice has been generated."})})).finally((()=>{window.deviseSettings.$bus.$emit("screenshotDone",e)}))}catch(t){window.deviseSettings.$bus.$emit("screenshotDone",e),console.warn("Devise Warning: There may be a problem with this slice. Try wrapping the template in a single <div> to resolve and prevent children components to be at the root level.")}},attemptOpenSliceSettings(e){this.devise.metadata&&e.metadata&&this.devise===e&&window.deviseSettings.$bus.$emit("open-slice-settings",this.deviseForSlice)},markSlice(e,t){if(e===this.devise){const e=document.getElementsByClassName("devise-component-marker");while(e.length>0)e[0].parentNode.removeChild(e[0]);if(t)try{const e=X().offset(this.sliceEl,"margin"),t=X().width(this.sliceEl,"margin"),s=X().height(this.sliceEl,"margin"),i=document.createElement("div");i.innerHTML=`\n            <div class="dvs-absolute-center dvs-absolute">\n              <h1 class="dvs-text-gray-400 dvs-font-hairline dvs-font-sans dvs-p-4 dvs-bg-black dvs-rounded dvs-shadow-lg">\n                ${this.devise.metadata.label}\n              </h1>\n            </div>`,i.classList="devise-component-marker dvs-absolute dvs-bg-black dvs-z-60 dvs-opacity-75 pointer-events-none",i.style.cssText=`top:${e.top}px;left:${e.left}px;width:${t}px;height:${s}px`,document.body.appendChild(i)}catch(s){console.warn("Devise Warning: There may be a problem with this slice. Try wrapping the template in a single <div> to resolve and prevent children components to be at the root level.")}}},addVisibilityScrollListeners(){"undefined"===typeof this.$refs.component.isVisible&&"undefined"===typeof this.$refs.component.isHidden||"undefined"===typeof this.$refs.component||(window.addEventListener("scroll",(()=>{this.$refs.component&&(this.checkVisible(this.$refs.component.$el)?this.$refs.component&&"undefined"!==typeof this.$refs.component.isVisible&&this.$refs.component.isVisible():this.$refs.component&&"undefined"!==typeof this.$refs.component.isHidden&&this.$refs.component.isHidden())})),setTimeout((()=>{this.$refs.component&&this.checkVisible(this.$refs.component.$el)&&this.$refs.component&&"undefined"!==typeof this.$refs.component.isVisible&&this.$refs.component.isVisible()}),1e3))},checkVisible(e){const t=e.getBoundingClientRect(),s=Math.max(document.documentElement.clientHeight,window.innerHeight);return!(t.bottom<0||t.top-s>=0)},buildStyles(e,t,s){return"undefined"!==typeof t&&("undefined"!==typeof t.top&&(e.marginTop=`${t.top}px`),"undefined"!==typeof t.right&&(e.marginRight=`${t.right}px`),"undefined"!==typeof t.bottom&&(e.marginBottom=`${t.bottom}px`),"undefined"!==typeof t.left&&(e.marginLeft=`${t.left}px`)),"undefined"!==typeof s&&("undefined"!==typeof s.top&&(e.paddingTop=`${s.top}px`),"undefined"!==typeof s.right&&(e.paddingRight=`${s.right}px`),"undefined"!==typeof s.bottom&&(e.paddingBottom=`${s.bottom}px`),"undefined"!==typeof s.left&&(e.paddingLeft=`${s.left}px`)),e}}},ee=Q,te=(0,g.Z)(ee,K,Y,!1,null,null,null),se=te.exports;const ie="__unique_key_prop__",ne=`__devise__${Date.now()}_`;let oe=0;const re=e=>null!==e&&"object"===typeof e,ae=e=>{if(re(e)){if(ie in e)return e[ie];const t=`${ne}${oe+=1}`;return Object.defineProperty(e,ie,{value:t}),t}return e};var de,ce,le={name:"DeviseSlices",functional:!0,render(e,t){if(t.props.slices&&t.props.slices.length)return t.props.slices.map(((s,i)=>{if("model"!==s.metadata.type)return e(se,Object.assign({},t.data,{key:ae(s),props:{devise:s,sliceIndex:i,editorMode:t.props.editorMode}}));if(s.slices){const i=JSON.parse(JSON.stringify(s.slices));t.props.modifyData&&t.props.modifyData(i);const n=i.map(((s,i)=>e(se,Object.assign({},t.data,{key:ae(s),props:{devise:s,sliceIndex:i,editorMode:t.props.editorMode}}))));return n}}))},props:{editorMode:{type:Boolean,default:!1},modifyData:{type:Function,default:null}},mounted(){this.$nextTick((()=>{window.deviseSettings.$bus.$emit("devise-loaded")}))}},ue=le,me=(0,g.Z)(ue,de,ce,!1,null,null,null),ge=me.exports;window.axios=s(9669);const pe={install(e,{store:t,router:i,bus:n,options:a}){if("undefined"===typeof t)throw new Error("Please provide a vuex store.");if("undefined"===typeof i)throw new Error("Please provide a vue router.");i.options.routes.map((e=>{if(Object.prototype.hasOwnProperty.call(e,"components")||(e.components={}),!Object.prototype.hasOwnProperty.call(e.components,"devise")){const t=Promise.all([s.e(90),s.e(737)]).then(s.bind(s,2908));e.components.devise=t}return e}));for(const s in H)if(H[s]){const e=H[s];let t=!0;for(const s in i.options.routes)if(i.options.routes[s]){const n=i.options.routes[s];n.name===e.name&&(t=!1)}t&&i.addRoute(e)}"undefined"===typeof window.deviseSettings&&(window.deviseSettings=()=>{}),window.deviseSettings.$bus="undefined"===typeof n?x:n,e.use(o.ZP),e.use(d()),e.component("Devise",h),e.component("Slices",ge),e.component("Messages",j),e.directive("devise-alert-confirm",_),e.component("DeviseUserCreate",(()=>s.e(761).then(s.bind(s,1865)))),e.component("DeviseUserEdit",(()=>s.e(761).then(s.bind(s,9721)))),e.component("DeviseUserDelete",(()=>s.e(761).then(s.bind(s,4243)))),e.component("DevisePageCreate",(()=>s.e(27).then(s.bind(s,1651)))),e.component("DevisePageCopy",(()=>s.e(27).then(s.bind(s,859)))),e.component("DevisePageTranslate",(()=>s.e(27).then(s.bind(s,3323)))),e.component("DevisePageSettings",(()=>s.e(27).then(s.bind(s,9976)))),e.component("DevisePageVersions",(()=>s.e(27).then(s.bind(s,9694)))),e.component("DevisePageDelete",(()=>s.e(27).then(s.bind(s,2113)))),e.component("DevisePageJumpToEdit",(()=>s.e(27).then(s.bind(s,9936)))),e.component("DeviseSiteCreate",(()=>s.e(376).then(s.bind(s,7003)))),e.component("DeviseSiteEdit",(()=>s.e(376).then(s.bind(s,9558)))),e.component("DeviseSiteDelete",(()=>s.e(376).then(s.bind(s,1532)))),e.component("DeviseRedirectCreate",(()=>s.e(684).then(s.bind(s,3544)))),e.component("DeviseRedirectEdit",(()=>s.e(684).then(s.bind(s,3428)))),e.component("DeviseRedirectDelete",(()=>s.e(684).then(s.bind(s,6461)))),"undefined"!==typeof t.state.adminMenu&&(k.state.adminMenu=Object.assign({},t.state.adminMenu)),"undefined"!==typeof t.state.settingsMenu&&(k.state.settingsMenu=Object.assign({},t.state.settingsMenu)),k.state.currentPage=Object.assign({},k.state.currentPage,window.deviseSettings.$page),k.state.sites=Object.assign({},k.state.sites,{data:window.deviseSettings.$sites}),t.registerModule("devise",k),e.directive("devise-image",O),e.directive("devise-link",D),e.directive("devise-opacity",M);const c=Object.assign({breakpoints:{mobile:639,tablet:767,desktop:1023,largeDesktop:1119,ultraWideDesktop:9999}},a);e.mixin({props:{devise:{type:Object,default:()=>{}},slices:{type:Array,default:()=>[]},deviseModels:{type:Object,default:()=>{}}},data(){return{deviseOptions:c}},computed:{...(0,r.Se)("devise",["breakpoint","currentPage","currentUser","lang"]),isLoggedIn(){return!!this.currentUser}},methods:{goToPage(e,t){this.$router.push({name:e,params:t})},href(e){window.open(e,"_self")},launchMediaManager(e,t){window.deviseSettings.$bus.$emit("devise-launch-media-manager",{callback(s){e[t]=s.url}})},can(e){if(this.isLoggedIn){const t=Array.isArray(e)?e:[e],s=window.deviseSettings.$user.permissions_list?window.deviseSettings.$user.permissions_list:[];for(let e=0;e<t.length;e+=1){const i=s.find((s=>s===t[e]));if(i)return!0}}return!1},toast({title:t,message:s,type:i,timeout:n}){let o=`${t}: ${s}`;e.$toast.open({message:o,type:i,duration:n})}},store:t}),window.deviseSettings.$config&&"undefined"!==typeof window.deviseSettings.$config.mothership&&null!==window.deviseSettings.$config.mothership&&t.commit("devise/setMothership",window.deviseSettings.$config.mothership),window.deviseSettings.$config&&"undefined"!==typeof window.deviseSettings.$config.layouts&&t.commit("devise/setLayouts",window.deviseSettings.$config.layouts)}};var he=pe,we=s(8345);const ve=[];i["default"].use(we.Z);const fe=new we.Z({mode:"abstract",history:!0,transitionOnLoad:!0,routes:ve});fe.beforeEach(((e,t,s)=>{"undefined"!==typeof e.meta.title?document.title=e.meta.title:document.title="Welcome to Devise",s()}));var be=fe;i["default"].use(r.ZP);const $e={};var Se=new r.ZP.Store({state:$e});i["default"].config.productionTip=!1,s(4267),window.bus=x,(0,n.Z)(Se,be),i["default"].use(he,{store:Se,router:be,bus:window.bus,options:{adminClass:""}});new i["default"]({el:"#app",router:be,mounted(){this.appLoaded()},methods:{appLoaded(){window.bus.$on("devise-loaded",(()=>{}))}}})},5913:function(e,t,s){var i=s(5104);t["Z"]={methods:{uppercase(e){return e.charAt(0).toUpperCase()+e.substring(1).toLowerCase()},slugify(e){return e.replace(/[^\w\-]+/g,"").replace(/\-/g,"").trim()},randomString(e){for(var t="",s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=0;i<e;i++)t+=s.charAt(Math.floor(Math.random()*s.length));return t},isEmail(e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e.toLowerCase())},escapeHtml(e){var t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,(function(e){return t[e]}))},clipString(e,t,s){return"undefined"===typeof s&&(s=!1),"undefined"!==typeof e&&null!==e&&s&&(e=this.escapeHtml(e)),(0,i.Z)(e,t,{html:s})},genUniqueKey(e){const t="__unique_key_prop__",s="__key_prefix__"+Date.now()+"_";let i=0;const n=e=>null!==e&&"object"===typeof e,o=e=>{if(n(e)){if(t in e)return e[t];const n=s+i++;return Object.defineProperty(e,t,{value:n}),n}return e};return o(e)}}}}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var o=t[i]={exports:{}};return e[i].call(o.exports,o,o.exports,s),o.exports}s.m=e,function(){var e=[];s.O=function(t,i,n,o){if(!i){var r=1/0;for(l=0;l<e.length;l++){i=e[l][0],n=e[l][1],o=e[l][2];for(var a=!0,d=0;d<i.length;d++)(!1&o||r>=o)&&Object.keys(s.O).every((function(e){return s.O[e](i[d])}))?i.splice(d--,1):(a=!1,o<r&&(r=o));if(a){e.splice(l--,1);var c=n();void 0!==c&&(t=c)}}return t}o=o||0;for(var l=e.length;l>0&&e[l-1][2]>o;l--)e[l]=e[l-1];e[l]=[i,n,o]}}(),function(){s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,{a:t}),t}}(),function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};s.t=function(i,n){if(1&n&&(i=this(i)),8&n)return i;if("object"===typeof i&&i){if(4&n&&i.__esModule)return i;if(16&n&&"function"===typeof i.then)return i}var o=Object.create(null);s.r(o);var r={};e=e||[null,t({}),t([]),t(t)];for(var a=2&n&&i;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach((function(e){r[e]=function(){return i[e]}}));return r["default"]=function(){return i},s.d(o,r),o}}(),function(){s.d=function(e,t){for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}}(),function(){s.f={},s.e=function(e){return Promise.all(Object.keys(s.f).reduce((function(t,i){return s.f[i](e,t),t}),[]))}}(),function(){s.u=function(e){return"js/"+({27:"devise-administration-pages",90:"devise-pages",91:"devise-languages",133:"devise-slices",208:"devise-meta",351:"devise-users",376:"devise-administration-sites",383:"devise-media",469:"devise-editors",519:"devise-slice-admin",522:"devise-previewmode",524:"devise-utilities",565:"devise-media-selector",585:"devise-redirects",591:"devise-wysiwyg",648:"devise-sites",684:"devise-administration-redirects",737:"devise-administration",761:"devise-administration-users",861:"devise-flatpickr",952:"devise-icons",969:"devise-query-selector"}[e]||e)+"."+{27:"336fd75a",90:"65046881",91:"9ed2b10b",133:"cab48117",208:"ce84e126",351:"9d5a4df9",376:"330d1aec",383:"fc9ed76f",469:"e0e417c7",477:"ecf2cc3b",519:"37c4223d",522:"a6bd5281",524:"2ea8f51f",565:"d364de7b",585:"0e4cd792",591:"7293a131",648:"6a85bb44",684:"e490d416",737:"7c54256b",761:"38a85362",861:"4ee2400f",952:"d46565c9",969:"370d4d04"}[e]+".js"}}(),function(){s.miniCssF=function(e){return"css/"+{133:"devise-slices",383:"devise-media",469:"devise-editors",591:"devise-wysiwyg"}[e]+"."+{133:"ddfc3349",383:"ddfc3349",469:"ddfc3349",591:"ddfc3349"}[e]+".css"}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="devisephp-interface:";s.l=function(i,n,o,r){if(e[i])e[i].push(n);else{var a,d;if(void 0!==o)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var u=c[l];if(u.getAttribute("src")==i||u.getAttribute("data-webpack")==t+o){a=u;break}}a||(d=!0,a=document.createElement("script"),a.charset="utf-8",a.timeout=120,s.nc&&a.setAttribute("nonce",s.nc),a.setAttribute("data-webpack",t+o),a.src=i),e[i]=[n];var m=function(t,s){a.onerror=a.onload=null,clearTimeout(g);var n=e[i];if(delete e[i],a.parentNode&&a.parentNode.removeChild(a),n&&n.forEach((function(e){return e(s)})),t)return t(s)},g=setTimeout(m.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=m.bind(null,a.onerror),a.onload=m.bind(null,a.onload),d&&document.head.appendChild(a)}}}(),function(){s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){s.j=179}(),function(){s.p="/devise/"}(),function(){var e=function(e,t,s,i){var n=document.createElement("link");n.rel="stylesheet",n.type="text/css";var o=function(o){if(n.onerror=n.onload=null,"load"===o.type)s();else{var r=o&&("load"===o.type?"missing":o.type),a=o&&o.target&&o.target.href||t,d=new Error("Loading CSS chunk "+e+" failed.\n("+a+")");d.code="CSS_CHUNK_LOAD_FAILED",d.type=r,d.request=a,n.parentNode.removeChild(n),i(d)}};return n.onerror=n.onload=o,n.href=t,document.head.appendChild(n),n},t=function(e,t){for(var s=document.getElementsByTagName("link"),i=0;i<s.length;i++){var n=s[i],o=n.getAttribute("data-href")||n.getAttribute("href");if("stylesheet"===n.rel&&(o===e||o===t))return n}var r=document.getElementsByTagName("style");for(i=0;i<r.length;i++){n=r[i],o=n.getAttribute("data-href");if(o===e||o===t)return n}},i=function(i){return new Promise((function(n,o){var r=s.miniCssF(i),a=s.p+r;if(t(r,a))return n();e(i,a,n,o)}))},n={179:0};s.f.miniCss=function(e,t){var s={133:1,383:1,469:1,591:1};n[e]?t.push(n[e]):0!==n[e]&&s[e]&&t.push(n[e]=i(e).then((function(){n[e]=0}),(function(t){throw delete n[e],t})))}}(),function(){var e={179:0};s.f.j=function(t,i){var n=s.o(e,t)?e[t]:void 0;if(0!==n)if(n)i.push(n[2]);else{var o=new Promise((function(s,i){n=e[t]=[s,i]}));i.push(n[2]=o);var r=s.p+s.u(t),a=new Error,d=function(i){if(s.o(e,t)&&(n=e[t],0!==n&&(e[t]=void 0),n)){var o=i&&("load"===i.type?"missing":i.type),r=i&&i.target&&i.target.src;a.message="Loading chunk "+t+" failed.\n("+o+": "+r+")",a.name="ChunkLoadError",a.type=o,a.request=r,n[1](a)}};s.l(r,d,"chunk-"+t,t)}},s.O.j=function(t){return 0===e[t]};var t=function(t,i){var n,o,r=i[0],a=i[1],d=i[2],c=0;if(r.some((function(t){return 0!==e[t]}))){for(n in a)s.o(a,n)&&(s.m[n]=a[n]);if(d)var l=d(s)}for(t&&t(i);c<r.length;c++)o=r[c],s.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return s.O(l)},i=self["webpackChunkdevisephp_interface"]=self["webpackChunkdevisephp_interface"]||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))}();var i=s.O(void 0,[998],(function(){return s(3204)}));i=s.O(i)})();
//# sourceMappingURL=main.a8042075.js.map