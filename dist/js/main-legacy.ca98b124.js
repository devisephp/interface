(function(){"use strict";var e={4267:function(e,t,n){n.r(t);var i=n(9669),s=n.n(i);t["default"]=function(){window.axios=s(),window.axios.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",window.axios.defaults.headers.xsrfHeaderName="X-XSRF-TOKEN2",window.axios.defaults.headers.xsrfCookieName="XSRF-TOKEN2";var e=document.head.querySelector('meta[name="csrf-token"]');e&&(window.axios.defaults.headers.common["X-CSRF-TOKEN"]=e.content)}},9849:function(e,t,n){n(6992),n(8674),n(9601),n(7727);var i=n(538),s=n(3678),o=n(9726),r=n(4367),a=(n(1703),n(1249),n(1539),n(8783),n(3948),n(8862),n(8309),n(9826),n(2433)),c=n(629),d=n(4926),u=n(3518),l=n.n(u),f=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("portal-target",{attrs:{name:"app-root"}}),n("div",{class:[e.breakpoint,e.isPreviewFrame?"preview-frame":""],attrs:{id:"devise-container"}},[e.can("access admin")&&!e.isPreviewFrame?n("administration"):e._e(),n("messages",{staticStyle:{position:"relative","z-index":"9999"}}),n("div",{attrs:{id:"dvs-app-content"}},["undefined"===typeof e.currentPage||"desktop"===e.currentPage.previewMode||e.isPreviewFrame?n("div",{staticClass:"devise-content"},[e._t("on-top"),e._t("static-content"),"undefined"!==typeof e.currentPage&&e.currentPage.slices?[e.timeToShow?n("slices",{attrs:{slices:e.currentPage.slices,"editor-mode":e.can("access admin")&&!e.isPreviewFrame}}):e._e()]:e._e(),e.isLoggedIn&&"undefined"!==typeof e.currentPage&&e.currentPage.slices&&e.currentPage.slices.length<1?n("div",{staticClass:"dvs-text-center dvs-py-16 dvs-w-full dvs-flex dvs-flex-col dvs-py-20"},[n("h1",{staticClass:"dvs-font-sans dvs-font-thin dvs-text-gray-900 dvs-uppercase dvs-mb-4"},[e._v(" Let's Get to Work ")]),n("p",{staticClass:"dvs-text-xl dvs-text-gray-800"},[e._v(' Click "Add Slice" on the admin panel to start designing this page! ')])]):e._e(),e._t("\n          static-content-bottom"),e._t("on-bottom")],2):e._e(),"undefined"!==typeof e.currentPage&&!e.isPreviewFrame&&e.isLoggedIn?n("div",{attrs:{id:"devise-iframe-editor"}},["desktop"!==e.currentPage.previewMode&&e.isLoggedIn?n("iframe",{class:[e.currentPage.previewMode],attrs:{id:"devise-responsive-preview",src:e.currentUrl}}):e._e()]):e._e()])],1)],1)},g=[],m=(n(7941),n(4747),n(2222),{name:"Devise",components:{Administration:function(){return Promise.all([n.e(90),n.e(737)]).then(n.bind(n,7206))}},data:function(){return{timeToShow:!1}},computed:(0,r.Z)((0,r.Z)({},(0,c.Se)("devise",["breakpoint","currentUser","currentPage"])),{},{currentUrl:function(){return window.location.href},isPreviewFrame:function(){try{return window.self!==window.top}catch(e){return!0}},isLoggedIn:function(){return this.currentUser}}),created:function(){this.setSizeAndBreakpoint()},mounted:function(){var e=this;window.devise=this,this.can("access admin")?this.initDevise():this.$nextTick((function(){setTimeout((function(){window.deviseSettings.$bus.$emit("devise-loaded")}),10)})),this.$nextTick((function(){e.timeToShow=!0})),this.addWatchers()},methods:(0,r.Z)((0,r.Z)({},(0,c.nv)("devise",["setBreakpoint"])),{},{initDevise:function(){try{this.isPreviewFrame?this.page=window.parent.deviseSettings.$page:(this.currentPage.previewMode="desktop",this.page=window.deviseSettings.$page,this.$router.push({name:"devise-page-editor"}))}catch(t){console.warn("Devise: window.deviseSettings.$page or window.parent.deviseSettings.$page not found. Nothing to render")}this.addWatchers();var e=this;this.$nextTick((function(){setTimeout((function(){e.removeBlocker(),e.showMessages(),window.deviseSettings.$bus.$emit("devise-loaded")}),10)}))},removeBlocker:function(){var e=document.getElementById("devise-blocker");e&&e.classList.add("fade")},showMessages:function(){var e=window.deviseSettings.$messages.errors;if(e)for(var t=Object.keys(e),n=function(){var t=s[i];e[t].forEach((function(e){window.deviseSettings.$bus.$emit("showError","".concat(t,": ").concat(e))}))},i=0,s=t;i<s.length;i++)n()},addWatchers:function(){window.addEventListener("resize",this.setSizeAndBreakpoint)},setSizeAndBreakpoint:function(){var e=window.innerWidth,t=window.innerHeight,n=this.findBreakpoint(e);this.setBreakpoint({breakpoint:n,diminsions:{width:e,height:t}})},findBreakpoint:function(e){for(var t in this.deviseOptions.breakpoints)if(this.deviseOptions.breakpoints[t]&&e<this.deviseOptions.breakpoints[t])return t;return"ultraWideDesktop"}})}),p=m,h=n(1001),w=(0,h.Z)(p,f,g,!1,null,null,null),v=w.exports,b=(n(561),n(7042),{setBreakpoint:function(e,t){e.breakpoint=t},setDevMode:function(e,t){e.devMode=t},setGeneric:function(e,t){e[t.config.store]=t.response.data},deleteGeneric:function(e,t){e[t.config.store].data.splice(e.cobrands.data.indexOf(t.record),1)},setLanguages:function(e,t){e.languages=t},createLanguage:function(e,t){e.languages.data.push(t)},updateLanguage:function(e,t){t.language;var n=t.data},setLayouts:function(e,t){e.layouts=t},addToMediaRegenerationRequests:function(e,t){e.mediaRegenerationRequests.push(t)},setCurrentDirectory:function(e,t){e.currentDirectory=t},setFiles:function(e,t){e.files=t},setSearchableMedia:function(e,t){e.searchableMedia.data=t},setDirectories:function(e,t){e.directories=t},toggleCropping:function(e){e.isCropping=!e.isCropping},setMeta:function(e,t){e.meta=t},createMeta:function(e,t){e.meta.data.push(t)},updateMeta:function(e,t){t.meta;var n=t.data},deleteMeta:function(e,t){e.meta.data.splice(e.meta.data.indexOf(t),1)},setModels:function(e,t){e.models=t},setModelQueries:function(e,t){e.modelQueries=t},setModelSettings:function(e,t){e.modelSettings=t},setMothership:function(e,t){e.mothership=t},setCurrentPage:function(e,t){e.currentPage=Object.assign({},e.currentPage,t)},setCurrentPageVersionLastUpdate:function(e,t){e.currentPage.slices=t.slices,e.currentPage.version_last_updated_at=t.version_last_updated_at},setPreviewModeInCurrentPage:function(e,t){e.currentPage.previewMode=t},createPage:function(e,t){e.pages.data.push(t)},setPages:function(e,t){e.pages=t},setPagesList:function(e,t){e.pagesList.data=t},appendPage:function(e,t){e.pages.data.push(t)},updatePage:function(e,t){t.page;var n=t.data},deletePage:function(e,t){e.pages.data.splice(e.pages.data.indexOf(t),1)},createPageVersion:function(e,t){var n=t.page,i=t.data;n.versions.push(i)},deletePageVersion:function(e,t){var n=t.page,i=t.version,s=n.versions.find((function(e){return e.id===i.id}));n.versions.splice(n.versions.indexOf(s),1)},updatePageVersion:function(e,t){var n=t.page,i=t.version,s=t.data,o=n.versions.find((function(e){return e.id===i.id}));return o=s,o},createSite:function(e,t){e.sites.data.push(t)},setSites:function(e,t){e.sites=t},updateSite:function(e,t){var n=t.site,i=t.data;n.name=i.name,n.domain=i.domain,n.languages=i.languages},deleteSite:function(e,t){e.sites.data.splice(e.sites.data.indexOf(t),1)},setSlices:function(e,t){e.slices=t},setSlicesDirectories:function(e,t){e.slicesDirectories=t},createSlice:function(e,t){e.slices.data.push(t)},updateSlice:function(e,t){var n=t.slice,i=t.data;n.name=i.name},deleteSlice:function(e,t){e.slices.data.splice(e.slices.data.indexOf(t),1)},createRedirect:function(e,t){e.redirects.data.push(t)},setRedirects:function(e,t){e.redirects=t},updateRedirect:function(e,t){t.redirect;var n=t.data},deleteRedirect:function(e,t){e.redirects.data.splice(e.redirects.data.indexOf(t),1)},createUser:function(e,t){e.users.data.push(t)},setUsers:function(e,t){e.users=t},updateUser:function(e,t){t.user;var n=t.data},deleteUser:function(e,t){e.users.data.splice(e.users.data.indexOf(t),1)}}),S=(n(2707),n(4916),n(4765),n(9600),n(6977),n(9653),n(5306),{buildFilterParams:function(e){if("undefined"===typeof e)return"";var t=JSON.parse(JSON.stringify(e));Object.keys(t).forEach((function(e){null===t[e]&&delete t[e]}));var n={},s=S.buildSortParams(t.sort),o=S.buildRelatedParams(t.related),r=S.buildScopeParams(t.scopes),a=t.search,c=t.page,d=t.paginated,u=t.cache;if("undefined"!==typeof d&&(n.paginated=d,delete t.paginated),c&&""!==c&&(n.page=c),s&&""!==s&&(n.sort=s),r&&""!==r&&(n.scopes=r),u&&(n.cache=!0,delete t.cache),t.dates&&Object.keys(t.dates).length>0){var l={};for(var f in t.dates)(t.dates[f].after||t.dates[f].before)&&(l[f]="".concat(t.dates[f].after,",").concat(t.dates[f].before));n.filters||i["default"].set(n,"filters",{}),i["default"].set(n.filters,"dates",l)}if(o&&Object.keys(o).length>0){for(var g in o)o[g]&&""===o[g]&&i["default"]["delete"](o,g);n.filters||i["default"].set(n,"filters",{}),i["default"].set(n.filters,"related",o)}if(a&&Object.keys(a).length>0){for(var m in a)a[m]&&""===a[m]&&i["default"]["delete"](a,m);n.filters||i["default"].set(n,"filters",{}),i["default"].set(n.filters,"search",a)}return n=Object.assign({},t,n),n=S.serialize(n),n},buildSortParams:function(e){var t="";for(var n in e)e[n]&&(t+="desc"===e[n]?"-".concat(n):n,t+=",");return t=t.substr(0,t.length-1),t},buildRelatedParams:function(e){var t={};for(var n in e)e[n]&&(t[n]=e[n].join());return t},buildSearchParams:function(e){var t={};for(var n in e)e[n]&&(t[n]=e[n].join());return t},buildScopeParams:function(e){var t=[];for(var n in e)if(e[n]){var i={};i[n]=e[n],t.push(i)}return t},serialize:function(e,t){var n,i=[];for(n in e)if("undefined"!==typeof e[n]){var s=t?"".concat(t,"[").concat(n,"]"):n,r=e[n];i.push(null!==r&&"object"===(0,o.Z)(r)?S.serialize(r,s):"".concat(encodeURIComponent(s),"=").concat(encodeURIComponent(r)))}return i.join("&")},formatMoney:function(e){var t=0,n=2,i=".",s=",",o=e<0?"-":"",r=String(parseInt(e=Math.abs(Number(e)||0).toFixed(n),0));return t=(t=r.length)>3?t%3:0,"$".concat(o+(t?r.substr(0,t)+s:"")+r.substr(t).replace(/(\d{3})(?=\d)/g,"$1".concat(s))+(n?i+Math.abs(e-r).toFixed(n).slice(2):""))},sanitizeField:function(e){return"link"===e.type&&delete e.href,e},sanitizeSlice:function(e){var t=this;for(var n in e)e[n]&&Object.prototype.hasOwnProperty.call(e[n],"type")&&"metadata"!==n&&(e[n]=this.sanitizeField(e[n]));e.slices.map((function(e){return t.sanitizeSlice(e)}))},sanitizePageData:function(e){var t=this;return e.slices.map((function(e){return t.sanitizeSlice(e)}))}}),$=S,y={getGeneric:function(e,t){var n=!1,i="".concat(e.state.api.baseUrl).concat(t.config.apiendpoint,"/?").concat($.buildFilterParams(t.filters));return t.config.app&&(n=!0,i="".concat(t.config.apiendpoint,"/?").concat($.buildFilterParams(t.filters))),new Promise((function(s){window.axios.get(i).then((function(i){e.commit("setGeneric",{config:t.config,response:i},{root:n}),s(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getGenericRecord:function(e,t){var n="".concat(e.state.api.baseUrl).concat(t.config.apiendpoint,"/").concat(t.id);return t.config.app&&(n="".concat(t.config.apiendpoint,"/").concat(t.id)),new Promise((function(e){window.axios.get(n).then((function(t){e(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},searchGeneric:function(e,t){var n="".concat(e.state.api.baseUrl).concat(t.config.apiendpoint,"/?").concat($.buildFilterParams(t.filters));return t.config.app&&(n="".concat(t.config.apiendpoint,"/?").concat($.buildFilterParams(t.filters))),new Promise((function(e){window.axios.get(n).then((function(t){e(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},createGeneric:function(e,t){var n="";return n=t.config.app?t.config.apiendpoint:"".concat(e.state.api.baseUrl).concat(t.config.apiendpoint),new Promise((function(e){window.axios.post(n,t.record).then((function(n){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.record[t.config.recordLabel]," has been created.")}),e(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},updateGeneric:function(e,t){var n="".concat(e.state.api.baseUrl).concat(t.config.apiendpoint,"/").concat(t.record.id);return t.config.app&&(n="".concat(t.config.apiendpoint,"/").concat(t.record.id)),new Promise((function(e){window.axios.put(n,t.record).then((function(n){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.record[t.config.recordLabel]," has been saved.")}),e(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},deleteGeneric:function(e,t){var n="".concat(e.state.api.baseUrl).concat(t.config.apiendpoint,"/").concat(t.record.id);return t.config.app&&(n="".concat(t.config.apiendpoint,"/").concat(t.record.id)),new Promise((function(e){window.axios.delete(n).then((function(n){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.record[t.config.recordLabel]," has been deleted.")}),e(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},appGenericSearch:function(e,t){return new Promise((function(e){window.axios.get("".concat(t.config.apiendpoint,"/?").concat($.buildFilterParams(t.filters))).then((function(t){e(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},setBreakpoint:function(e,t){return new Promise((function(n){e.commit("setBreakpoint",t),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},saveCaption:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"media/alts"),t).then((function(e){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your caption has been saved."}),n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},setDevMode:function(e,t){return new Promise((function(n){e.commit("setDevMode",t),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getLanguages:function(e){return new Promise((function(t,n){window.axios.get("".concat(e.state.api.baseUrl,"languages/")).then((function(n){e.commit("setLanguages",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e),n(e)}))}))},createLanguage:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"languages/"),t).then((function(t){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new language has been added."}),e.commit("createLanguage",t.data.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},updateLanguage:function(e,t){return new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"languages/").concat(t.id),t).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new language has been updated."}),e.commit("updateLanguage",{language:t,data:i.data}),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},setCurrentDirectory:function(e,t){return new Promise((function(n){e.commit("setCurrentDirectory",t),n()})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},generateImages:function(e,t){return new Promise((function(n,i){window.axios.put("".concat(e.state.api.baseUrl,"media-styles"),t).then((function(t){e.commit("setFiles",t.data),n(t)}),(function(e){window.deviseSettings.$bus.$emit("showError",e),i(e)}))}))},regenerateMedia:function(e,t){return e.commit("addToMediaRegenerationRequests",t),new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"media-styles/").concat(t.instanceId,"/").concat(t.fieldName),t).then((function(t){e.commit("setFiles",t.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},mediaSearch:function(e,t){return new Promise((function(n){window.axios.get("".concat(e.state.api.baseUrl,"media-search?q=").concat(t)).then((function(e){n(e.data)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getCurrentFiles:function(e,t){var n="";return t&&"image"===t.type&&(n="?type=image"),new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"media/").concat(e.state.currentDirectory).concat(n)).then((function(n){e.commit("setFiles",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getCurrentDirectories:function(e){return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"media-directories/").concat(e.state.currentDirectory)).then((function(n){e.commit("setDirectories",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},toggleFile:function(e,t){var n=e.state.files.find((function(e){return e.name===t.name})),i="undefined"===typeof n.on||!1===n.on;e.commit("toggleFileOnOff",{file:n,on:i})},deleteFile:function(e,t){return new Promise((function(n){window.axios.delete("".concat(e.state.api.baseUrl,"media").concat(t.url)).then((function(e){window.deviseSettings.$bus.$emit("showMessage",{title:"File Deleted",message:"The file was successfully deleted from the server."}),n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},createDirectory:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"media-directories"),{directory:t.directory,name:t.name}).then((function(e){window.deviseSettings.$bus.$emit("showMessage",{title:"Directory Created",message:"The directory was successfully created."}),n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},deleteDirectory:function(e,t){return new Promise((function(n){window.axios.delete("".concat(e.state.api.baseUrl,"media-directories"),{params:{directory:t}}).then((function(e){window.deviseSettings.$bus.$emit("showMessage",{title:"Directory Deleted",message:"The directory was successfully deleted from the server."}),n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getMeta:function(e){return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"meta/")).then((function(n){e.commit("setMeta",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},createMeta:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"meta/"),t).then((function(t){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new meta has been added."}),e.commit("createMeta",t.data.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},updateMeta:function(e,t){return new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"meta/").concat(t.id),t).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Your new meta has been updated."}),e.commit("updateMeta",{meta:t,data:i.data}),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},deleteMeta:function(e,t){return new Promise((function(n){window.axios.delete("".concat(e.state.api.baseUrl,"meta/").concat(t.id)).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"The meta has been deleted."}),e.commit("deleteMeta",t),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getModels:function(e){return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"models/")).then((function(n){e.commit("setModels",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getModelQueries:function(e){return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"model-queries/")).then((function(n){e.commit("setModelQueries",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getModelSettings:function(e,t){return new Promise((function(n){window.axios.get("".concat(e.state.api.baseUrl,"models/settings?").concat(t)).then((function(t){e.commit("setModelSettings",t.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getModelRecords:function(e,t){var n=t.model,i=t.filters;return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"models/query?class=").concat(n,"&").concat($.buildFilterParams(i))).then((function(e){t(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getPages:function(e,t){return new Promise((function(n){window.axios.get("".concat(e.state.api.baseUrl,"pages/?").concat($.buildFilterParams(t))).then((function(t){e.commit("setPages",t.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getPagesList:function(e,t){return new Promise((function(n){var i=t&&Object.prototype.hasOwnProperty.call(t,"language_id")?"language_id=".concat(t.language_id):{};window.axios.get("".concat(e.state.api.baseUrl,"routes?").concat(i)).then((function(t){e.commit("setPagesList",t.data.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},getPage:function(e,t){return new Promise((function(n){window.axios.get("".concat(e.state.api.baseUrl,"pages/").concat(t)).then((function(t){e.commit("appendPage",t.data),n(t)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},searchPages:function(e,t){return new Promise((function(n){window.axios.get("".concat(e.state.api.baseUrl,"pages-suggest/"),{params:{term:t.term}}).then((function(e){n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},searchPageVersions:function(e,t){return new Promise((function(n){window.axios.get("".concat(e.state.api.baseUrl,"page-versions/"),{params:{term:t.term,site_id:t.site_id}}).then((function(e){n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},copyPage:function(e,t){return new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"pages/").concat(t.page.id,"/copy"),t.data).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.data.title," has been copied from ").concat(t.page.title,".")}),e.commit("createPage",i.data),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},translatePage:function(e,t){return new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"pages/").concat(t.page.id,"/copy"),t.data).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.data.title," has been copied for translation from ").concat(t.page.title,".")}),e.commit("createPage",i.data),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},copyPageVersion:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"page-versions"),{page_version_id:t.version.id,name:"".concat(t.version.name," Copy")}).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.version.name," has been copied.")}),e.commit("createPageVersion",{page:t.page,data:i.data.data}),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},deletePageVersion:function(e,t){return new Promise((function(n){window.axios.delete("".concat(e.state.api.baseUrl,"page-versions/").concat(t.version.id)).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.version.name," has been deleted.")}),e.commit("deletePageVersion",{page:t.page,version:t.version}),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},updatePageVersion:function(e,t){return new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"page-versions/").concat(t.version.id),t.version).then((function(i){e.commit("updatePageVersion",{page:t.page,version:t.version,data:i.data}),window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.version.name," has been saved.")}),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},savePage:function(e,t){var n=t.page,i=t.forceSave,s=n.versions.find((function(e){return!0===e.current})),o="".concat(e.state.api.baseUrl,"pages/").concat(n.id,"?version_id=").concat(s.id);return i&&(o="".concat(e.state.api.baseUrl,"pages/").concat(n.id,"?version_id=").concat(s.id,"&force=1")),new Promise((function(t,i){window.axios.put(o,n).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(n.title," has been saved.")}),window.deviseSettings.$bus.$emit("devise-page-saved"),e.commit("setCurrentPageVersionLastUpdate",i.data.data),t(i)})).catch((function(e){480===e.response.status?t(480):(window.deviseSettings.$bus.$emit("showError",e),i(e))}))}))},setPreviewModeInCurrentPage:function(e,t){e.commit("setPreviewModeInCurrentPage",t)},getSlicesDirectories:function(e){return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"slices-directories/")).then((function(n){e.commit("setSlicesDirectories",n.data),t(n)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},createSlice:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"slices/"),t).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.name," has been created.")}),e.commit("createSlice",i.data.data),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},updateSlice:function(e,t){return new Promise((function(n){window.axios.put("".concat(e.state.api.baseUrl,"slices/").concat(t.slice.id),t.data).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.data.name," has been saved.")}),e.commit("updateSlice",{slice:t.slice,data:i.data.data}),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},deleteSlice:function(e,t){return new Promise((function(n){window.axios.delete("".concat(e.state.api.baseUrl,"slices/").concat(t.id)).then((function(i){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"".concat(t.name," has been deleted.")}),e.commit("deleteSlice",t),n(i)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},copyPageSlice:function(e,t){return new Promise((function(n){window.axios.post("".concat(e.state.api.baseUrl,"page-versions/").concat(t.page_version_id,"/slices"),{copy_slice_id:t.copy_slice_id}).then((function(e){window.deviseSettings.$bus.$emit("showMessage",{title:"Success!",message:"Slice was copied."}),n(e)})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))})).catch((function(e){window.deviseSettings.$bus.$emit("showError",e)}))},refreshChecklist:function(e){return new Promise((function(t){window.axios.get("".concat(e.state.api.baseUrl,"install-checklist/")).then((function(n){e.commit("updateChecklist",n.data),t(n)})).catch((function(){window.deviseSettings.$bus.$emit("showError","Error in retrieving checklist")}))})).catch((function(){window.deviseSettings.$bus.$emit("showError","Error in retrieving checklist")}))},completeInstall:function(e){return new Promise((function(t){window.axios.post("".concat(e.state.api.baseUrl,"install-complete/")).then((function(e){t(e)})).catch((function(){window.deviseSettings.$bus.$emit("showError","Error in completing the install. You can add DVS_MODE=active to your .env to manually complete")}))})).catch((function(){window.deviseSettings.$bus.$emit("showError","Error in completing the install.  You can add DVS_MODE=active to your .env to manually complete")}))},login:function(e,t){return new Promise((function(e){window.axios.post("/login",t).then((function(t){e(t)})).catch((function(){window.deviseSettings.$bus.$emit("showError","Error logging the new user in. Check database to ensure user was inserted correctly.")}))})).catch((function(){window.deviseSettings.$bus.$emit("showError","Error logging the new user in. Check database to ensure user was inserted correctly.")}))}},P=y,E=(n(9714),n(7621)),k={breakpoint:function(e){return e.breakpoint.breakpoint},breakpointAndDimensions:function(e){return e.breakpoint},component:function(e){return function(e){return window.deviseSettings.$deviseComponents[e]}},componentFromView:function(e){return function(e){for(var t in window.deviseSettings.$deviseComponents)if(window.deviseSettings.$deviseComponents[t].view==="slices.".concat(e))return window.deviseSettings.$deviseComponents[t];return!1}},deviseInterface:function(){return window.deviseSettings.$interface},sliceConfig:function(){return function(e){return window.deviseSettings.$deviseComponents[e.metadata.name]?window.deviseSettings.$deviseComponents[e.metadata.name]:window.deviseSettings.$deviseComponents[e.name]}},fieldConfig:function(e,t){return function(e){var n=e.fieldKey,i=e.slice,s=t.sliceConfig(i);return"undefined"!==typeof s.config[n]&&s.config[n]}},languages:function(e){return e.languages},lang:function(e){return window.deviseSettings.$lang},mediaAlreadyRequested:function(e){return function(t){return e.mediaRegenerationRequests.find((function(e){return e.component===t.component&&e.fieldName===t.fieldName}))}},files:function(e){return e.files},directories:function(e){return e.directories},searchableMedia:function(e){return e.searchableMedia},currentDirectory:function(e){return e.currentDirectory},meta:function(e){return e.meta},storeModels:function(e){return e.models},modelSettings:function(e){return e.modelSettings},mothershipUrl:function(e){return e.mothership?e.mothership.url:null},mothershipApiKey:function(e){return e.mothership?e.mothership["api-key"]:null},changes:function(e){return e.changes},pages:function(e){return e.pages},pagesList:function(e){return e.pagesList},page:function(e,t,n){var i=parseInt(n.route.params.pageId,0);return e.pages.data.find((function(e){return e.id===i}))},currentPage:function(e){return e.currentPage},sites:function(e){return e.sites},site:function(e){return window.deviseSettings.$sites?window.deviseSettings.$sites.find((function(e){return e.current})):[]},siteByRouteParam:function(e,t,n){var i=parseInt(n.route.params.siteId,0);return e.sites.data?e.sites.data.find((function(e){return e.id===i})):null},additionalSiteSettings:function(e,t,n){var i=parseInt(t.site.id,0),s=window.deviseSettings.$config.additionalSiteSettings;return s?s.find((function(e){return e.id===i})):null},siteById:function(e){return function(t){return!!e.sites.data&&e.sites.data.find((function(e){return e.id===t}))}},theme:function(e,t,n){var i={panel:{background:"radial-gradient(ellipse at top, #2C3858 , #182039)",color:"#cdc9f1",secondaryColor:"#979797"},panelCard:{background:"#12182d",color:"#eee"},panelSidebar:{background:"#182039",color:"#eee",secondaryColor:"rgb(101, 139, 239)",borderColor:E("#182039").lighten(10).toString()},panelIcons:{color:"#658BEF"},actionButton:{color:"#ffffff",background:"#EB8F89"},actionButtonGhost:{color:"#EB8F89",borderColor:"#EB8F89",borderWidth:"2px"},secondaryButton:{color:"#ffffff",background:"#EB8F89"},secondaryButtonGhost:{color:"#EB8F89",borderColor:"#EB8F89",borderWidth:"2px"},help:{color:"#EB8F89",borderColor:"#EB8F89",backgroundColor:"#ffe5e4"},chartColor1:{color:"rgba(54, 162, 235, 1)"},chartColor2:{color:"rgba(75, 192, 192, 1)"},chartColor3:{color:"rgba(255, 206, 86, 1)"},chartColor4:{color:"rgba(255, 99, 132, 1)"},chartColor5:{color:"rgba(153, 102, 255, 1)"},chartColor6:{color:"rgba(255, 159, 64, 1)"}},s=i;if(e.currentPage){var o=t.siteById(e.currentPage.site_id);if(o&&o.settings&&o.settings.colors){var r=o.settings.colors;r.panelTop&&r.panelBottom&&(s.panel={background:"radial-gradient(ellipse at top, ".concat(r.panelTop.color,", ").concat(r.panelBottom.color,")"),color:r.panelText.color,secondaryColor:"#979797"}),r.panelpanelSidebarBackgroundTop&&r.panelSidebarText&&(s.panelCard={background:r.panelSidebarBackground.color,color:r.panelSidebarText.color}),r.penalSidebarBackground&&r.panelSidebarText&&r.panelSidebarAction&&r.panelSidebarBackground&&(s.panelSidebar={background:r.panelSidebarBackground.color,color:r.panelSidebarText.color,secondaryColor:r.panelSidebarAction.color,borderColor:E(r.panelSidebarBackground.color).lighten(10).toString()}),r.panelAction&&(s.panelIcons={color:r.panelAction.color}),r.buttonsActionBackground&&r.buttonsActionText&&(s.actionButton={background:r.buttonsActionBackground.color,color:r.buttonsActionText.color}),r.buttonsActionBackground&&(s.actionButtonGhost={border:"2px solid ".concat(r.buttonsActionBackground.color),color:r.buttonsActionBackground.color}),r.buttonsSecondaryBackground&&r.buttonsSecondaryText&&(s.secondaryButton={background:r.buttonsSecondaryBackground.color,color:r.buttonsSecondaryText.color}),r.buttonsSecondaryBackground&&(s.secondaryButtonGhost={border:"2px solid ".concat(r.buttonsSecondaryBackground.color),color:r.buttonsSecondaryBackground.color}),r.helpBackground&&r.helpText&&(s.help={background:r.helpBackground.color,border:"1px solid ".concat(r.helpBackground.color),color:r.helpText.color}),r.chartColor1&&r.chartColor2&&r.chartColor3&&r.chartColor4&&r.chartColor5&&r.chartColor6&&(s.chartColor1={color:r.chartColor1.color}),s.chartColor2={color:r.chartColor2.color},s.chartColor3={color:r.chartColor3.color},s.chartColor4={color:r.chartColor4.color},s.chartColor5={color:r.chartColor5.color},s.chartColor6={color:r.chartColor6.color}}}return s=Object.assign({},i,s),s},slicesList:function(e){return e.slices},slicesDirectories:function(e){return e.slicesDirectories},templates:function(e){return e.templates},template:function(e,t,n){var i=parseInt(n.route.params.templateId,0);return e.templates.data.find((function(e){return e.id===i}))},redirects:function(e){return e.redirects},redirect:function(e,t,n){var i=parseInt(n.route.params.redirectId,0);return e.redirects.data.find((function(e){return e.id===i}))},currentRedirect:function(e){return window.deviseSettings.$redirect},users:function(e){return e.users},user:function(e,t,n){var i=parseInt(n.route.params.userId,0);return e.users.data.find((function(e){return e.id===i}))},currentUser:function(e){return window.deviseSettings.$user}},x=k;i["default"].use(c.ZP);var M={api:{baseUrl:"/api/devise/"},adminMenu:[{icon:"CreateIcon",routeName:"devise-page-editor"},{icon:"ImageIcon",label:"Settings",routeName:"media-manager",permissions:"manage media"},{icon:"CogIcon",label:"Settings",routeName:"devise-settings",permissions:"manage settings",menu:[{label:"Site Settings",children:[{label:"Pages",routeName:"devise-pages-admin",permissions:"manage pages"},{label:"Users",routeName:"devise-users-admin",permissions:"manage users"},{label:"Global Meta",routeName:"devise-meta-manage",permissions:"manage meta"},{label:"Sites",routeName:"devise-sites-admin",permissions:"manage sites"},{label:"Languages",routeName:"devise-languages-manage",permissions:"manage languages"},{label:"301 Redirects",routeName:"devise-redirects-admin",permissions:"manage redirects"}]}]}],breakpoint:{breakpoint:null,diminsions:{width:null,height:null}},devMode:!1,changes:[],currentDirectory:".",directories:[],files:[],searchableMedia:{data:[]},isCropping:!1,languages:{data:[]},layouts:[],mediaRegenerationRequests:[],meta:{data:[]},models:{data:[]},modelQueries:[],modelSettings:{},mothership:null,currentPage:{languages:[],slices:[],meta:[],versions:[],previewMode:"desktop"},pages:{data:[]},pagesList:{data:[]},site:{},sites:{data:[]},slices:[],slicesDirectories:[],templates:{data:[]},redirects:{data:[]},users:{data:[]},checklist:{database:!1,migrations:!1,auth:!1,user:!1,site:!1,page:!1,image_library:!1,optional:{config:!1},image_optimization:{jpegoptim:!1,optipng:!1,pngquant:!1,svgo:!1,gifsicle:!1}}},C={namespaced:!0,state:M,mutations:b,actions:P,getters:x},_=new i["default"],O=n(7621);function U(e,t){if(null!==t.value){var n=t.modifiers.background;if(n){var i=window.getComputedStyle(e).getPropertyValue("background-color");if(i){var s=O(i);s.setAlpha(t.value),e.style.backgroundColor=s}}}}var F={bind:function(e,t){var n=function n(){var s=document.querySelector("#devise-admin"),o=document.createElement("devise-confirm"),r=s.parentNode.insertBefore(o,s.nextSibling),a=i["default"].extend({data:function(){return{clicks:0,show:!0}},methods:{ok:function(){t.value.callback(t.value.arguments),this.close()},cancel:function(){this.close()},close:function(){this.show=!1,e.removeEventListener("click",n,!0),r.remove()}},template:'\n        <div v-if="show" class="dvs-fixed dvs-inset-0 dvs-z-9999">\n          <div class="dvs-blocker"></div>\n          <div class="dvs-fixed dvs-absolute-center dvs-z-50 dvs-p-8 dvs-rounded dvs-shadow-lg dvs-bg-admin-bg dvs-text-admin-fg">\n            <h3 class="dvs-mb-8 dvs-text-white">Please Confirm</h3>\n            <div class="dvs-mb-8 dvs-text-white">'.concat(t.value.message,'</div>\n\n            <button class="dvs-btn dvs-btn-primary" @click="ok">Confirm</button>\n            <button class="dvs-btn dvs-btn-secondary" @click="cancel">Cancel</button>\n            </div>\n          </div>\n        </div>\n        ')});(new a).$mount(r)};e.addEventListener("click",n)}};n(6699),n(2023);function B(e,t){if(null!==t.value){var n=t.value,i=n.image,s=n.srcAttr,o=n.breakpoint,r=t.modifiers,a=r.lazy,c=r.background,d=t.modifiers.noSize;o=null!==o?o:"desktop",s=s||"src","string"===typeof t.value&&(i={url:t.value});var u=function(){var e=i,t=e.sizes;if(!t||!t[Object.keys(t)[0]])return!1;for(var n in t)if(t[n]){var s=t[n];if(s.breakpoints){var r=s.breakpoints.map((function(e){return e.toLowerCase()}));if(r.includes(o.toLowerCase()))return{size:n,settings:s}}}var a=Object.keys(t)[0];return{defaultSize:a,settings:t[a]}},l=function(){if("undefined"!==typeof i&&i.media){var t=u();if(t&&i.media[t.size])return e.width=t.settings.w,e.height=t.settings.h,!0}return!1},f=function(){if("undefined"!==typeof i){var t=i.url,n=null;i.media?(n=u(),n?i.media[n.size]&&(t=i.media[n.size]):i.media.custom&&(t=i.media.custom)):d=!0,c?e.style.backgroundImage="url('".concat(t,"')"):(e.setAttribute(s,t),i.alt?e.alt=i.alt:i.caption&&(e.alt=i.caption),!d&&null!==n&&n.settings&&(e.width=n.settings.w,e.height=n.settings.h))}};if(a&&"IntersectionObserver"in window){l();var g=new IntersectionObserver((function(t){t.forEach((function(t){t.isIntersecting&&(f(),g.unobserve(e))}))}));g.observe(e)}else l(),f()}}function j(e,t){var n=t.value;e.href=n.href,e.target=n.target,e.innerHTML=n.text}var D,L,R=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div")},T=[],I=(n(7327),n(5913)),N={name:"DeviseMessages",mixins:[I.Z],data:function(){return{title:null}},computed:{mainTitle:function(){return null===this.title?"There was a Problem":this.title},activeErrors:function(){return this.errors.filter((function(e){return!0===e.active}))},activeMessages:function(){return this.messages.filter((function(e){return!0===e.active}))}},mounted:function(){var e=this;window.deviseSettings.$bus.$on("showError",(function(t){e.addError(t)})),window.deviseSettings.$bus.$on("showMessage",(function(t){e.addMessage(t)}))},methods:{addError:function(e){var t=this;if("undefined"!==typeof e.response&&"undefined"!==typeof e.response.data&&"undefined"!==typeof e.response.data.errors){for(var n in this.title=e.response.data.message,e.response.data.errors)if(e.response.data.errors[n]){var i=e.response.data.errors[n];t.appendError({id:this.genUniqueKey(e),code:e.response.status,title:e.response.statusText,message:i[0]})}}else if("undefined"!==typeof e.response&&"undefined"!==typeof e.response.data&&null!==e.response.data&&null!==e.response.data.message){var s=e.response.data.exception?e.response.data.exception:e.response.data.message;t.appendError({id:this.genUniqueKey(e),code:e.response.status,title:"".concat(e.response.status,": ").concat(s),message:e.response.data.message})}else"undefined"!==typeof e.data&&null!==e.data?t.appendError({id:this.genUniqueKey(e),code:e.status,title:e.data.error,message:e.data.message}):"string"===typeof e?t.appendError({id:this.genUniqueKey(e),code:"",title:"Uh-Oh!",message:e}):"undefined"!==typeof e.message&&null!==e.message?t.appendError({id:this.genUniqueKey(e),code:"",title:"Uh-Oh!",message:e.message}):t.appendError({id:this.genUniqueKey(e),code:e.code,title:"".concat(e.code,": ").concat(e.title),message:e.message})},appendError:function(e){var t=e.title?e.title:"Unknown Error",n=e.message?e.message:"We do not have any details on this error";this.showErrorMsg({title:t,message:n})},addMessage:function(e){this.showSuccessMsg({title:e.title,message:e.message})}}},z=N,A=(0,h.Z)(z,R,T,!1,null,null,null),Z=A.exports,V=function(){return n.e(91).then(n.bind(n,2903))},q=function(){return Promise.all([n.e(90),n.e(737)]).then(n.bind(n,3788))},G=function(){return n.e(208).then(n.bind(n,8987))},W=function(){return n.e(90).then(n.bind(n,6937))},H=function(){return n.e(351).then(n.bind(n,5177))},K=function(){return n.e(648).then(n.bind(n,9659))},Y=function(){return n.e(351).then(n.bind(n,6892))},J=function(){return n.e(585).then(n.bind(n,8295))},X=[{path:"/devise-settings",name:"devise-settings",components:{devise:q},meta:{parentRouteName:"devise-settings"},permissions:"manage settings"},{path:"/devise-models",name:"devise-models",components:{devise:q},meta:{parentRouteName:"devise-models"}},{path:"/devise/pages/",name:"devise-pages-admin",components:{devise:H},meta:{parentRouteName:"devise-settings"}},{path:"/",alias:"*",name:"devise-page-editor",components:{devise:W},meta:{parentRouteName:"devise-page-editor"}},{path:"/devise/settings/languages",name:"devise-languages-manage",components:{devise:V},meta:{parentRouteName:"devise-settings"}},{path:"/devise/settings/meta",name:"devise-meta-manage",components:{devise:G},meta:{parentRouteName:"devise-settings"}},{path:"/devise/settings",name:"devise-settings-index",components:{devise:q},meta:{parentRouteName:"devise-settings"}},{path:"/devise/sites",name:"devise-sites-admin",components:{devise:K},meta:{parentRouteName:"devise-settings"}},{path:"/devise/users",name:"devise-users-admin",components:{devise:Y},meta:{parentRouteName:"devise-settings"}},{path:"/devise/redirects",name:"devise-redirects-admin",components:{devise:J},meta:{parentRouteName:"devise-settings"}}],Q=X,ee=function(){var e=this,t=e.$createElement,n=e._self._c||t;return null!==e.sliceComponent?n(e.currentView,e._g(e._b({ref:"component",tag:"component",style:e.styles,attrs:{id:e.id,devise:e.deviseForSlice,breakpoint:e.breakpoint,slices:e.devise.slices,"devise-models":e.currentPage,component:e.sliceComponent,"slice-index":e.sliceIndex}},"component",e.$attrs,!1),e.$listeners)):e._e()},te=[],ne={name:"DeviseSlice",components:{Slice:oe,SettingsIcon:function(){return n.e(952).then(n.bind(n,7437))}},mixins:[I.Z],props:{editorMode:{type:Boolean,default:!1},sliceIndex:{type:Number,required:!0}},data:function(){return{mounted:!1,showEditor:!1,sliceEl:null,sliceComponent:null}},computed:(0,r.Z)((0,r.Z)({},(0,c.Se)("devise",["component","sliceConfig","breakpoint","mediaAlreadyRequested"])),{},{deviseForSlice:function(){return this.devise.config?this.devise.config:this.devise},id:function(){return"undefined"===typeof this.deviseForSlice.settings&&this.$set(this.deviseForSlice,"settings",{id:null}),this.deviseForSlice.settings.id},styles:function(){var e={};"undefined"===typeof this.deviseForSlice.settings&&this.$set(this.deviseForSlice,"settings",{});var t=this.deviseForSlice.settings,n=t.backgroundColor,i=t.color,s=t.margin,o=t.mobile_margin,r=t.tablet_margin,a=t.padding,c=t.mobile_padding,d=t.tablet_padding;return"undefined"!==typeof n&&(e.backgroundColor=n),"undefined"!==typeof i&&(e.color=i),"tablet"===this.breakpoint?this.buildStyles(e,r,d):"mobile"===this.breakpoint?this.buildStyles(e,o,c):this.buildStyles(e,s,a)},currentView:function(){return this.devise.config?window.deviseSettings.$deviseComponents[this.devise.name]:window.deviseSettings.$deviseComponents[this.devise.metadata.name]}}),created:function(){this.cleanupImageFields(),this.hydrateMissingProperties(),this.checkDefaults(),this.sliceComponent=this.component(this.devise.metadata.name)},mounted:function(){this.mounted=!0,this.sliceEl=this.$refs.component.$el,"undefined"===typeof this.devise.settings&&this.$set(this.devise,"settings",{}),this.addListeners(),this.can("manage slices")&&this.checkMediaSizesForRegeneration()},methods:(0,r.Z)((0,r.Z)({},(0,c.nv)("devise",["regenerateMedia"])),{},{addListeners:function(){window.deviseSettings.$bus.$on("jumpToSlice",this.attemptJumpToSlice),window.deviseSettings.$bus.$on("openSliceSettings",this.attemptOpenSliceSettings),window.deviseSettings.$bus.$on("markSlice",this.markSlice),this.addVisibilityScrollListeners()},hydrateMissingProperties:function(){var e=this.sliceConfig(this.devise),t=e.fields;if(t)for(var n in t)this.addMissingProperty(n),this.addFieldConfigurations(t,n)},addMissingProperty:function(e){var t={text:null,url:null,media:{},target:null,color:null,checked:null,enabled:!1},n=Object.assign({},t,this.deviseForSlice[e]);this.$set(this.deviseForSlice,e,n)},checkDefaults:function(){var e=this.sliceConfig(this.devise),t=e.fields;if(t)for(var n in t)this.deviseForSlice["field"]&&t[n].default&&this.setDefaults(n,t[n].default)},addFieldConfigurations:function(e,t){for(var n in e[t])this.deviseForSlice[t]["pp"]||this.$set(this.deviseForSlice[t],n,e[t][n])},setDefaults:function(e,t){for(var n in t)"undefined"!==typeof this.deviseForSlice[e][n]&&null!==this.deviseForSlice[e][n]||this.$set(this.deviseForSlice[e],n,t[n])},cleanupImageFields:function(){if("undefined"!==typeof this.currentView.fields)for(var e in this.currentView.fields)if(this.currentView.fields[e]){var t=this.currentView.fields[e];this.devise[e]&&"image"===t.type&&null!==this.devise[e].url&&(delete this.devise[e].sizes,this.$set(this.devise[e],"sizes",t.sizes))}},checkMediaSizesForRegeneration:function(){if("undefined"!==typeof this.currentView.fields)for(var e in this.currentView.fields)if(this.currentView.fields[e]){var t=this.currentView.fields[e];"image"===t.type&&"media"===this.devise[e].mode&&null!==this.devise[e].url&&("undefined"===typeof t.sizes||"object"!==(0,o.Z)(this.devise[e].media)||this.mediaAlreadyRequested({component:this.devise.metadata.name,fieldName:e})||this.determineMediaRegenerationNeeds(t,e))}},determineMediaRegenerationNeeds:function(e,t){var i=this;for(var s in e.sizes)if(e.sizes[s]&&("undefined"===typeof this.devise[t].media[s]||!this.devise[t].media[s]))return this.makeMediaRegenerationRequest(e,t),!0;for(var o in e.sizes)e.sizes[o]&&function(){var s=e.sizes[o],r=i.devise[t].media[o];r&&n.e(519).then(n.t.bind(n,7563,19)).then((function(n){var o=n.default,a=r.indexOf("?"),c=r.substring(a),d=o.parse(c);if(!d||parseInt(d.w,0)!==parseInt(s.w,0)||parseInt(d.h,0)!==parseInt(s.h,0))return i.makeMediaRegenerationRequest(e,t),!0})).catch((function(){return"An error occurred while loading the component"}))}();return!1},makeMediaRegenerationRequest:function(e,t){var n={allSizes:e.sizes,instanceId:this.devise.metadata.instance_id,fieldName:t,component:this.devise.metadata.name};this.regenerateMedia(n).then((function(){window.deviseSettings.$bus.$emit("showMessage",{title:"New Images Generated",message:"Pro tip: Some new sizes were generated for a slice you were working on (Field: ".concat(n.fieldName,") You may need to refresh.")})}))},attemptJumpToSlice:function(e){var t=this;this.devise.metadata&&e.metadata&&this.devise.metadata.instance_id===e.metadata.instance_id&&n.e(519).then(n.t.bind(n,4477,23)).then((function(e){var n=e.default;try{var i=n.offset(t.sliceEl,"margin");window.scrollTo({top:i.top,behavior:"smooth"})}catch(s){console.warn("Devise Warning: There may be a problem with this slice. Try wrapping the template in a single <div> to resolve and prevent children components to be at the root level.")}})).catch((function(){return"An error occurred while loading the component"}))},attemptOpenSliceSettings:function(e){this.devise.metadata&&e.metadata&&this.devise===e&&window.deviseSettings.$bus.$emit("open-slice-settings",this.deviseForSlice)},markSlice:function(e,t){var i=this;if(e===this.devise){var s=document.getElementsByClassName("devise-component-marker");while(s.length>0)s[0].parentNode.removeChild(s[0]);n.e(519).then(n.t.bind(n,4477,23)).then((function(e){var n=e.default;if(t)try{var s=n.offset(i.sliceEl,"margin"),o=n.width(i.sliceEl,"margin"),r=n.height(i.sliceEl,"margin"),a=document.createElement("div");a.innerHTML='\n            <div class="dvs-absolute-center dvs-absolute">\n              <h1 class="dvs-text-gray-400 dvs-font-hairline dvs-font-sans dvs-p-4 dvs-bg-black dvs-rounded dvs-shadow-lg">\n                '.concat(i.devise.metadata.label,"\n              </h1>\n            </div>"),a.classList="devise-component-marker dvs-absolute dvs-bg-black dvs-z-60 dvs-opacity-75",a.style.cssText="top:".concat(s.top,"px;left:").concat(s.left,"px;width:").concat(o,"px;height:").concat(r,"px"),document.body.appendChild(a)}catch(c){console.warn("Devise Warning: There may be a problem with this slice. Try wrapping the template in a single <div> to resolve and prevent children components to be at the root level.")}}))}},addVisibilityScrollListeners:function(){var e=this;"undefined"===typeof this.$refs.component.isVisible&&"undefined"===typeof this.$refs.component.isHidden||"undefined"===typeof this.$refs.component||window.addEventListener("scroll",(function(){e.checkVisible(e.$refs.component.$el)?e.$refs.component&&"undefined"!==typeof e.$refs.component.isVisible&&e.$refs.component.isVisible():e.$refs.component&&"undefined"!==typeof e.$refs.component.isHidden&&e.$refs.component.isHidden()}))},checkVisible:function(e){var t=e.getBoundingClientRect(),n=Math.max(document.documentElement.clientHeight,window.innerHeight);return!(t.bottom<0||t.top-n>=0)},buildStyles:function(e,t,n){return"undefined"!==typeof t&&("undefined"!==typeof t.top&&(e.marginTop="".concat(t.top,"px")),"undefined"!==typeof t.right&&(e.marginRight="".concat(t.right,"px")),"undefined"!==typeof t.bottom&&(e.marginBottom="".concat(t.bottom,"px")),"undefined"!==typeof t.left&&(e.marginLeft="".concat(t.left,"px"))),"undefined"!==typeof n&&("undefined"!==typeof n.top&&(e.paddingTop="".concat(n.top,"px")),"undefined"!==typeof n.right&&(e.paddingRight="".concat(n.right,"px")),"undefined"!==typeof n.bottom&&(e.paddingBottom="".concat(n.bottom,"px")),"undefined"!==typeof n.left&&(e.paddingLeft="".concat(n.left,"px"))),e}})},ie=ne,se=(0,h.Z)(ie,ee,te,!1,null,null,null),oe=se.exports,re="__unique_key_prop__",ae="__devise__".concat(Date.now(),"_"),ce=0,de=function(e){return null!==e&&"object"===(0,o.Z)(e)},ue=function(e){if(de(e)){if(re in e)return e[re];var t="".concat(ae).concat(ce+=1);return Object.defineProperty(e,re,{value:t}),t}return e},le={name:"DeviseSlices",functional:!0,render:function(e,t){if(t.props.slices&&t.props.slices.length)return t.props.slices.map((function(n,i){if("model"!==n.metadata.type)return e(oe,Object.assign({},t.data,{key:ue(n),props:{devise:n,sliceIndex:i,editorMode:t.props.editorMode}}));if(n.slices){var s=JSON.parse(JSON.stringify(n.slices));t.props.modifyData&&t.props.modifyData(s);var o=s.map((function(n,i){return e(oe,Object.assign({},t.data,{key:ue(n),props:{devise:n,sliceIndex:i,editorMode:t.props.editorMode}}))}));return o}}))},props:{editorMode:{type:Boolean,default:!1},modifyData:{type:Function,default:null}},mounted:function(){this.$nextTick((function(){window.deviseSettings.$bus.$emit("devise-loaded")}))}},fe=le,ge=(0,h.Z)(fe,D,L,!1,null,null,null),me=ge.exports;window.axios=n(9669);var pe={install:function(e,t){var i=t.store,s=t.router,u=t.bus,f=t.options;if("undefined"===typeof i)throw new Error("Please provide a vuex store.");if("undefined"===typeof s)throw new Error("Please provide a vue router.");for(var g in s.options.routes.map((function(e){if(Object.prototype.hasOwnProperty.call(e,"components")||(e.components={}),!Object.prototype.hasOwnProperty.call(e.components,"devise")){var t=Promise.all([n.e(90),n.e(737)]).then(n.bind(n,6937));e.components.devise=t}return e})),s.beforeEach((function(e,t,n){window.axios.defaults.headers.common["Devise-UI-Referrer"]=JSON.stringify(e),n()})),Q)if(Q[g]){var m=Q[g],p=!0;for(var h in s.options.routes)if(s.options.routes[h]){var w=s.options.routes[h];w.name===m.name&&(p=!1)}p&&s.addRoute(m)}"undefined"===typeof window.deviseSettings&&(window.deviseSettings=function(){}),window.deviseSettings.$bus="undefined"===typeof u?_:u,e.use(a.ZP),e.component("devise",v),e.component("slices",me),e.component("messages",Z),e.directive("devise-alert-confirm",F),e.component("devise-user-create",(function(){return n.e(761).then(n.bind(n,1865))})),e.component("devise-user-edit",(function(){return n.e(761).then(n.bind(n,9721))})),e.component("devise-user-delete",(function(){return n.e(761).then(n.bind(n,4243))})),e.component("devise-page-create",(function(){return n.e(27).then(n.bind(n,1651))})),e.component("devise-page-copy",(function(){return n.e(27).then(n.bind(n,859))})),e.component("devise-page-translate",(function(){return n.e(27).then(n.bind(n,3323))})),e.component("devise-page-settings",(function(){return n.e(27).then(n.bind(n,9976))})),e.component("devise-page-versions",(function(){return n.e(27).then(n.bind(n,9632))})),e.component("devise-page-delete",(function(){return n.e(27).then(n.bind(n,2113))})),e.component("devise-page-jump-to-edit",(function(){return n.e(27).then(n.bind(n,9936))})),e.component("devise-site-create",(function(){return n.e(376).then(n.bind(n,7003))})),e.component("devise-site-edit",(function(){return n.e(376).then(n.bind(n,9558))})),e.component("devise-site-delete",(function(){return n.e(376).then(n.bind(n,1532))})),e.component("devise-redirect-create",(function(){return n.e(684).then(n.bind(n,3544))})),e.component("devise-redirect-edit",(function(){return n.e(684).then(n.bind(n,3428))})),e.component("devise-redirect-delete",(function(){return n.e(684).then(n.bind(n,6461))})),"undefined"!==typeof i.state.adminMenu&&(C.state.adminMenu=Object.assign({},i.state.adminMenu)),"undefined"!==typeof i.state.settingsMenu&&(C.state.settingsMenu=Object.assign({},i.state.settingsMenu)),C.state.currentPage=Object.assign({},C.state.currentPage,window.deviseSettings.$page),C.state.sites=Object.assign({},C.state.sites,{data:window.deviseSettings.$sites}),i.registerModule("devise",C),e.directive("devise-image",B),e.directive("devise-link",j),e.directive("devise-opacity",U);var b=Object.assign({breakpoints:{mobile:0,tablet:639,desktop:767,largeDesktop:1023,extraLargeDesktop:1119}},f);function S(e){var t=e.title,n=e.message,i=e.type,s=e.timeout;return i===d.Z.types.warn&&(i="warning"),l()[i]({title:t,message:n,timeout:s})}var $={success:S,error:S,info:S,warn:S};e.use(d.Z,$),e.mixin({props:{devise:{type:Object,default:function(){}},slices:{type:Array,default:function(){return[]}},deviseModels:{type:Object,default:function(){}}},data:function(){return{deviseOptions:b}},computed:(0,r.Z)((0,r.Z)({},(0,c.Se)("devise",["breakpoint","currentPage","currentUser","lang"])),{},{isLoggedIn:function(){return!!this.currentUser}}),methods:{goToPage:function(e,t){this.$router.push({name:e,params:t})},href:function(e){window.open(e,"_self")},launchMediaManager:function(e,t){window.deviseSettings.$bus.$emit("devise-launch-media-manager",{callback:function(n){e[t]=n.url}})},can:function(e){if(this.isLoggedIn){var t=function(){for(var t=Array.isArray(e)?e:[e],n=window.deviseSettings.$user.permissions_list?window.deviseSettings.$user.permissions_list:[],i=function(e){var i=n.find((function(n){return n===t[e]}));if(i)return{v:{v:!0}}},s=0;s<t.length;s+=1){var r=i(s);if("object"===(0,o.Z)(r))return r.v}}();if("object"===(0,o.Z)(t))return t.v}return!1}},store:i}),window.deviseSettings.$config&&"undefined"!==typeof window.deviseSettings.$config.mothership&&null!==window.deviseSettings.$config.mothership&&i.commit("devise/setMothership",window.deviseSettings.$config.mothership),window.deviseSettings.$config&&"undefined"!==typeof window.deviseSettings.$config.layouts&&i.commit("devise/setLayouts",window.deviseSettings.$config.layouts)}},he=pe,we=n(8345),ve=[];i["default"].use(we.Z);var be=new we.Z({mode:"abstract",history:!0,transitionOnLoad:!0,routes:ve});be.beforeEach((function(e,t,n){"undefined"!==typeof e.meta.title?document.title=e.meta.title:document.title="Welcome to Devise",n()}));var Se=be;i["default"].use(c.ZP);var $e={},ye=new c.ZP.Store({state:$e});i["default"].config.productionTip=!1,n(4267),window.bus=_,(0,s.Z)(ye,Se),i["default"].use(he,{store:ye,router:Se,bus:window.bus,options:{adminClass:""}});new i["default"]({el:"#app",router:Se,mounted:function(){this.appLoaded()},methods:{appLoaded:function(){window.bus.$on("devise-loaded",(function(){}))}}})},5913:function(e,t,n){var i=n(9726),s=(n(3210),n(4916),n(5306),n(7601),n(5104));t["Z"]={methods:{uppercase:function(e){return e.charAt(0).toUpperCase()+e.substring(1).toLowerCase()},slugify:function(e){return e.replace(/[^\w\-]+/g,"").replace(/\-/g,"").trim()},randomString:function(e){for(var t="",n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=0;i<e;i++)t+=n.charAt(Math.floor(Math.random()*n.length));return t},isEmail:function(e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e.toLowerCase())},escapeHtml:function(e){var t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,(function(e){return t[e]}))},clipString:function(e,t,n){return"undefined"===typeof n&&(n=!1),"undefined"!==typeof e&&null!==e&&n&&(e=this.escapeHtml(e)),(0,s.Z)(e,t,{html:n})},genUniqueKey:function(e){var t="__unique_key_prop__",n="__key_prefix__"+Date.now()+"_",s=0,o=function(e){return null!==e&&"object"===(0,i.Z)(e)},r=function(e){if(o(e)){if(t in e)return e[t];var i=n+s++;return Object.defineProperty(e,t,{value:i}),i}return e};return r(e)}}}}},t={};function n(i){var s=t[i];if(void 0!==s)return s.exports;var o=t[i]={id:i,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.exports}n.m=e,function(){var e=[];n.O=function(t,i,s,o){if(!i){var r=1/0;for(u=0;u<e.length;u++){i=e[u][0],s=e[u][1],o=e[u][2];for(var a=!0,c=0;c<i.length;c++)(!1&o||r>=o)&&Object.keys(n.O).every((function(e){return n.O[e](i[c])}))?i.splice(c--,1):(a=!1,o<r&&(r=o));if(a){e.splice(u--,1);var d=s();void 0!==d&&(t=d)}}return t}o=o||0;for(var u=e.length;u>0&&e[u-1][2]>o;u--)e[u]=e[u-1];e[u]=[i,s,o]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};n.t=function(i,s){if(1&s&&(i=this(i)),8&s)return i;if("object"===typeof i&&i){if(4&s&&i.__esModule)return i;if(16&s&&"function"===typeof i.then)return i}var o=Object.create(null);n.r(o);var r={};e=e||[null,t({}),t([]),t(t)];for(var a=2&s&&i;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach((function(e){r[e]=function(){return i[e]}}));return r["default"]=function(){return i},n.d(o,r),o}}(),function(){n.d=function(e,t){for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}}(),function(){n.f={},n.e=function(e){return Promise.all(Object.keys(n.f).reduce((function(t,i){return n.f[i](e,t),t}),[]))}}(),function(){n.u=function(e){return"js/"+({27:"devise-administration-pages",90:"devise-pages",91:"devise-languages",133:"devise-slices",208:"devise-meta",351:"devise-users",376:"devise-administration-sites",383:"devise-media",469:"devise-editors",519:"devise-slice-admin",522:"devise-previewmode",524:"devise-utilities",565:"devise-media-selector",585:"devise-redirects",591:"devise-wysiwyg",648:"devise-sites",684:"devise-administration-redirects",737:"devise-administration",761:"devise-administration-users",861:"devise-flatpickr",952:"devise-icons",969:"devise-query-selector"}[e]||e)+"-legacy."+{27:"514edd2d",90:"7528e4f9",91:"75e6b094",133:"68213f94",208:"1490ddc4",351:"8f5e3af0",376:"f5d033fd",383:"c9fbb038",469:"d5919060",519:"1c48959b",522:"ca6d61ff",524:"2faf6002",565:"1a41b9af",585:"bd4e4a29",591:"f4d0a79c",648:"9fbf4645",684:"712fc899",737:"60c8ddfa",761:"bc612bdc",861:"12fbba45",952:"20617cb0",953:"9a82c65b",969:"e67eff23"}[e]+".js"}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="devisephp-interface:";n.l=function(i,s,o,r){if(e[i])e[i].push(s);else{var a,c;if(void 0!==o)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var l=d[u];if(l.getAttribute("src")==i||l.getAttribute("data-webpack")==t+o){a=l;break}}a||(c=!0,a=document.createElement("script"),a.charset="utf-8",a.timeout=120,n.nc&&a.setAttribute("nonce",n.nc),a.setAttribute("data-webpack",t+o),a.src=i),e[i]=[s];var f=function(t,n){a.onerror=a.onload=null,clearTimeout(g);var s=e[i];if(delete e[i],a.parentNode&&a.parentNode.removeChild(a),s&&s.forEach((function(e){return e(n)})),t)return t(n)},g=setTimeout(f.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=f.bind(null,a.onerror),a.onload=f.bind(null,a.onload),c&&document.head.appendChild(a)}}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){n.j=179}(),function(){n.p="/devise/"}(),function(){n.b=document.baseURI||self.location.href;var e={179:0};n.f.j=function(t,i){var s=n.o(e,t)?e[t]:void 0;if(0!==s)if(s)i.push(s[2]);else{var o=new Promise((function(n,i){s=e[t]=[n,i]}));i.push(s[2]=o);var r=n.p+n.u(t),a=new Error,c=function(i){if(n.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var o=i&&("load"===i.type?"missing":i.type),r=i&&i.target&&i.target.src;a.message="Loading chunk "+t+" failed.\n("+o+": "+r+")",a.name="ChunkLoadError",a.type=o,a.request=r,s[1](a)}};n.l(r,c,"chunk-"+t,t)}},n.O.j=function(t){return 0===e[t]};var t=function(t,i){var s,o,r=i[0],a=i[1],c=i[2],d=0;if(r.some((function(t){return 0!==e[t]}))){for(s in a)n.o(a,s)&&(n.m[s]=a[s]);if(c)var u=c(n)}for(t&&t(i);d<r.length;d++)o=r[d],n.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return n.O(u)},i=self["webpackChunkdevisephp_interface"]=self["webpackChunkdevisephp_interface"]||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))}();var i=n.O(void 0,[998],(function(){return n(9849)}));i=n.O(i)})();
//# sourceMappingURL=main-legacy.ca98b124.js.map